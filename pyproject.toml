[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "youtube-transcripts"
version = "0.1.0"
description = "A tool for fetching, storing, and searching YouTube transcripts with full-text search capabilities"
authors = [{ name = "Graham Anderson", email = "graham@grahama.co" }]
requires-python = ">=3.10.11"
readme = "README.md"
license = "MIT"
keywords = [
    "youtube",
    "transcripts",
    "search",
    "sqlite",
    "fts5",
    "mcp",
    "machine-learning"
]

dependencies = [
    "pytube>=15.0.0",
    "youtube-transcript-api>=0.6.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "google-generativeai>=0.3.0",
    "python-dotenv>=1.0.0",
    "ollama>=0.1.0",
    "arangodb @ git+https://github.com/grahama1970/arangodb.git",
    "claude-test-reporter @ git+https://github.com/grahama1970/claude-test-reporter.git",
    "claude-module-communicator @ git+https://github.com/grahama1970/claude-module-communicator.git",
    "spacy>=3.8.7",
    "youtube-dl>=2021.12.17",
    "yt-dlp>=2025.5.22",
    "whisper>=1.1.10",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.3.0",
    "ipython>=8.0.0",
]

research = [
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "scikit-learn>=1.3.0",
]

[project.scripts]
youtube-cli = "youtube_transcripts.cli.app:app"
fetch-transcripts = "fetch_transcripts_cron:main"

[project.urls]
Repository = "https://github.com/grahama1970/youtube_transcripts"
Documentation = "https://github.com/grahama1970/youtube_transcripts/blob/main/README.md"

[tool.hatch.version]
path = "src/youtube_transcripts/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/youtube_transcripts"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]

[tool.ruff]
line-length = 120
target-version = "py310"
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "SIM", "RUF"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["youtube_transcripts"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"

[tool.hatch.metadata]
allow-direct-references = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
]
