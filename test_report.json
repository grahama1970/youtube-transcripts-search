{"created": 1748440896.8092594, "duration": 39.68351602554321, "exitcode": 1, "root": "/home/graham/workspace/experiments/youtube_transcripts", "environment": {}, "summary": {"passed": 21, "failed": 2, "total": 23, "collected": 23}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Dir"}]}, {"nodeid": "tests/cli", "outcome": "passed", "result": []}, {"nodeid": "tests/core", "outcome": "passed", "result": []}, {"nodeid": "tests/mcp", "outcome": "passed", "result": []}, {"nodeid": "tests/test_agents.py::TestAgentSystem", "outcome": "passed", "result": [{"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_manager_task_submission", "type": "Coroutine", "lineno": 37}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_search_optimizer_agent_execution", "type": "Coroutine", "lineno": 63}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_progress_tracking", "type": "Coroutine", "lineno": 91}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_message_passing", "type": "Coroutine", "lineno": 112}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_concurrent_agent_execution", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_error_handling", "type": "Coroutine", "lineno": 168}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_task_cancellation", "type": "Coroutine", "lineno": 187}]}, {"nodeid": "tests/test_agents.py", "outcome": "passed", "result": [{"nodeid": "tests/test_agents.py::TestAgentSystem", "type": "Class"}]}, {"nodeid": "tests/test_database.py::TestDatabaseOperations", "outcome": "passed", "result": [{"nodeid": "tests/test_database.py::TestDatabaseOperations::test_initialize_database_creates_tables", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_add_transcript_with_real_data", "type": "Function", "lineno": 56}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_search_transcripts_with_special_characters", "type": "Function", "lineno": 90}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_search_ranking_with_real_data", "type": "Function", "lineno": 128}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_channel_filtering", "type": "Function", "lineno": 170}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_cleanup_old_transcripts", "type": "Function", "lineno": 193}]}, {"nodeid": "tests/test_database.py", "outcome": "passed", "result": [{"nodeid": "tests/test_database.py::TestDatabaseOperations", "type": "Class"}]}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube", "outcome": "passed", "result": [{"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_extract_video_id", "type": "Function", "lineno": 23}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_fetch_real_transcript", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_get_channel_videos_real", "type": "Function", "lineno": 54}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_process_channels_with_empty_list", "type": "Function", "lineno": 78}]}, {"nodeid": "tests/test_real_youtube.py", "outcome": "passed", "result": [{"nodeid": "tests/test_real_youtube.py::TestRealYouTube", "type": "Class"}]}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_basic_search_without_optimization", "type": "Function", "lineno": 74}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_search_with_optimization", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_channel_specific_search", "type": "Function", "lineno": 124}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_query_optimizer_directly", "type": "Function", "lineno": 145}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_empty_query_handling", "type": "Function", "lineno": 169}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_multi_word_search", "type": "Function", "lineno": 183}]}, {"nodeid": "tests/test_unified_search.py", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "type": "Class"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/cli", "type": "Dir"}, {"nodeid": "tests/core", "type": "Dir"}, {"nodeid": "tests/mcp", "type": "Dir"}, {"nodeid": "tests/test_agents.py", "type": "Module"}, {"nodeid": "tests/test_database.py", "type": "Module"}, {"nodeid": "tests/test_real_youtube.py", "type": "Module"}, {"nodeid": "tests/test_unified_search.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_manager_task_submission", "lineno": 37, "outcome": "passed", "keywords": ["test_agent_manager_task_submission", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.007734464015811682, "outcome": "passed"}, "call": {"duration": 3.138072152156383, "outcome": "passed"}, "teardown": {"duration": 0.0007036537863314152, "outcome": "passed"}}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_search_optimizer_agent_execution", "lineno": 63, "outcome": "passed", "keywords": ["test_search_optimizer_agent_execution", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.009116372093558311, "outcome": "passed"}, "call": {"duration": 4.787055450025946, "outcome": "passed"}, "teardown": {"duration": 0.0005289409309625626, "outcome": "passed"}}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_progress_tracking", "lineno": 91, "outcome": "passed", "keywords": ["test_agent_progress_tracking", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.008749333675950766, "outcome": "passed"}, "call": {"duration": 1.5397224980406463, "outcome": "passed"}, "teardown": {"duration": 0.0006880639120936394, "outcome": "passed"}}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_message_passing", "lineno": 112, "outcome": "passed", "keywords": ["test_agent_message_passing", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0089844879694283, "outcome": "passed"}, "call": {"duration": 0.003985199145972729, "outcome": "passed"}, "teardown": {"duration": 0.0002587451599538326, "outcome": "passed"}}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_concurrent_agent_execution", "lineno": 145, "outcome": "passed", "keywords": ["test_concurrent_agent_execution", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.007447907701134682, "outcome": "passed"}, "call": {"duration": 9.351257774978876, "outcome": "passed", "log": [{"name": "asyncio", "msg": "Task was destroyed but it is pending!\ntask: <Task pending name='Task-12' coro=<AsyncAgentManager._execute_agent_task() done, defined at /home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/agent_manager.py:107> wait_for=<Future pending cb=[Task.task_wakeup()]>>", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/base_events.py", "filename": "base_events.py", "module": "base_events", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 1785, "funcName": "default_exception_handler", "created": 1748440871.9139988, "msecs": 913.0, "relativeCreated": 14878.740072250366, "thread": 124588126111424, "threadName": "Dummy-28", "processName": "MainProcess", "process": 3087063}]}, "teardown": {"duration": 0.0005723917856812477, "outcome": "passed"}}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_agent_error_handling", "lineno": 168, "outcome": "passed", "keywords": ["test_agent_error_handling", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00830427510663867, "outcome": "passed"}, "call": {"duration": 1.007713322993368, "outcome": "passed"}, "teardown": {"duration": 0.0005619409494102001, "outcome": "passed"}}, {"nodeid": "tests/test_agents.py::TestAgentSystem::test_task_cancellation", "lineno": 187, "outcome": "passed", "keywords": ["test_task_cancellation", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.008890226017683744, "outcome": "passed"}, "call": {"duration": 2.1507025049068034, "outcome": "passed"}, "teardown": {"duration": 0.00046848924830555916, "outcome": "passed"}}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_initialize_database_creates_tables", "lineno": 37, "outcome": "passed", "keywords": ["test_initialize_database_creates_tables", "TestDatabaseOperations", "test_database.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0034149084240198135, "outcome": "passed"}, "call": {"duration": 0.0005509108304977417, "outcome": "passed"}, "teardown": {"duration": 0.00021663401275873184, "outcome": "passed"}}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_add_transcript_with_real_data", "lineno": 56, "outcome": "passed", "keywords": ["test_add_transcript_with_real_data", "TestDatabaseOperations", "test_database.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0025972709991037846, "outcome": "passed"}, "call": {"duration": 0.002528760116547346, "outcome": "passed"}, "teardown": {"duration": 0.00019403360784053802, "outcome": "passed"}}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_search_transcripts_with_special_characters", "lineno": 90, "outcome": "passed", "keywords": ["test_search_transcripts_with_special_characters", "TestDatabaseOperations", "test_database.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0022411146201193333, "outcome": "passed"}, "call": {"duration": 0.004982649348676205, "outcome": "passed"}, "teardown": {"duration": 0.00014314288273453712, "outcome": "passed"}}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_search_ranking_with_real_data", "lineno": 128, "outcome": "passed", "keywords": ["test_search_ranking_with_real_data", "TestDatabaseOperations", "test_database.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0024031978100538254, "outcome": "passed"}, "call": {"duration": 0.0035341200418770313, "outcome": "passed"}, "teardown": {"duration": 0.00012084189802408218, "outcome": "passed"}}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_channel_filtering", "lineno": 170, "outcome": "passed", "keywords": ["test_channel_filtering", "TestDatabaseOperations", "test_database.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.004193833097815514, "outcome": "passed"}, "call": {"duration": 0.004990990273654461, "outcome": "passed"}, "teardown": {"duration": 0.00010243197903037071, "outcome": "passed"}}, {"nodeid": "tests/test_database.py::TestDatabaseOperations::test_cleanup_old_transcripts", "lineno": 193, "outcome": "passed", "keywords": ["test_cleanup_old_transcripts", "TestDatabaseOperations", "test_database.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.001981389708817005, "outcome": "passed"}, "call": {"duration": 0.00509432191029191, "outcome": "passed"}, "teardown": {"duration": 0.00010321196168661118, "outcome": "passed"}}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_extract_video_id", "lineno": 23, "outcome": "passed", "keywords": ["test_extract_video_id", "TestRealYouTube", "test_real_youtube.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 5.908217281103134e-05, "outcome": "passed"}, "call": {"duration": 0.00029497500509023666, "outcome": "passed"}, "teardown": {"duration": 4.269136115908623e-05, "outcome": "passed"}}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_fetch_real_transcript", "lineno": 37, "outcome": "passed", "keywords": ["test_fetch_real_transcript", "slow", "pytestmark", "TestRealYouTube", "test_real_youtube.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 6.712088361382484e-05, "outcome": "passed"}, "call": {"duration": 0.8920468697324395, "outcome": "passed", "log": [{"name": "asyncio", "msg": "Task was destroyed but it is pending!\ntask: <Task cancelling name='Task-36' coro=<AsyncAgentManager._execute_agent_task() done, defined at /home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/agent_manager.py:107> wait_for=<Future pending cb=[Task.task_wakeup()]>>", "args": null, "levelname": "ERROR", "levelno": 40, "pathname": "/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/base_events.py", "filename": "base_events.py", "module": "base_events", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 1785, "funcName": "default_exception_handler", "created": 1748440884.4820585, "msecs": 482.0, "relativeCreated": 27446.799755096436, "thread": 124596465674048, "threadName": "MainThread", "processName": "MainProcess", "process": 3087063}]}, "teardown": {"duration": 0.00010955194011330605, "outcome": "passed"}}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_get_channel_videos_real", "lineno": 54, "outcome": "passed", "keywords": ["test_get_channel_videos_real", "slow", "pytestmark", "TestRealYouTube", "test_real_youtube.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00012884335592389107, "outcome": "passed"}, "call": {"duration": 8.62238304503262, "outcome": "passed"}, "teardown": {"duration": 7.091090083122253e-05, "outcome": "passed"}}, {"nodeid": "tests/test_real_youtube.py::TestRealYouTube::test_process_channels_with_empty_list", "lineno": 78, "outcome": "passed", "keywords": ["test_process_channels_with_empty_list", "TestRealYouTube", "test_real_youtube.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 7.123220711946487e-05, "outcome": "passed"}, "call": {"duration": 6.774114444851875e-05, "outcome": "passed"}, "teardown": {"duration": 4.3771229684352875e-05, "outcome": "passed"}}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_basic_search_without_optimization", "lineno": 74, "outcome": "passed", "keywords": ["test_basic_search_without_optimization", "TestUnifiedSearch", "test_unified_search.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.008092200849205256, "outcome": "passed"}, "call": {"duration": 0.02155039831995964, "outcome": "passed", "log": [{"name": "youtube_transcripts.unified_search", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/unified_search.py", "filename": "unified_search.py", "module": "unified_search", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 106, "funcName": "_load_lora_adapter", "created": 1748440894.0248837, "msecs": 24.0, "relativeCreated": 36989.62497711182, "thread": 124596465674048, "threadName": "MainThread", "processName": "MainProcess", "process": 3087063}]}, "teardown": {"duration": 0.00012496206909418106, "outcome": "passed"}}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_search_with_optimization", "lineno": 107, "outcome": "failed", "keywords": ["test_search_with_optimization", "TestUnifiedSearch", "test_unified_search.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.007674202788621187, "outcome": "passed"}, "call": {"duration": 1.1574826948344707, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/test_unified_search.py", "lineno": 123, "message": "AssertionError: Should still find VERL videos even with optimization\nassert 0 > 0"}, "traceback": [{"path": "tests/test_unified_search.py", "lineno": 123, "message": "in test_search_with_optimization"}], "log": [{"name": "youtube_transcripts.unified_search", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/unified_search.py", "filename": "unified_search.py", "module": "unified_search", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 106, "funcName": "_load_lora_adapter", "created": 1748440894.0539873, "msecs": 53.0, "relativeCreated": 37018.728494644165, "thread": 124596465674048, "threadName": "MainThread", "processName": "MainProcess", "process": 3087063}], "longrepr": "tests/test_unified_search.py:123: in test_search_with_optimization\n    assert results[\"total_found\"] > 0, \"Should still find VERL videos even with optimization\"\nE   AssertionError: Should still find VERL videos even with optimization\nE   assert 0 > 0"}, "teardown": {"duration": 0.00024542538449168205, "outcome": "passed"}}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_channel_specific_search", "lineno": 124, "outcome": "passed", "keywords": ["test_channel_specific_search", "TestUnifiedSearch", "test_unified_search.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.008649141993373632, "outcome": "passed"}, "call": {"duration": 0.02016489114612341, "outcome": "passed", "log": [{"name": "youtube_transcripts.unified_search", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/unified_search.py", "filename": "unified_search.py", "module": "unified_search", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 106, "funcName": "_load_lora_adapter", "created": 1748440895.3333373, "msecs": 333.0, "relativeCreated": 38298.078536987305, "thread": 124596465674048, "threadName": "MainThread", "processName": "MainProcess", "process": 3087063}]}, "teardown": {"duration": 0.00012231199070811272, "outcome": "passed"}}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_query_optimizer_directly", "lineno": 145, "outcome": "failed", "keywords": ["test_query_optimizer_directly", "TestUnifiedSearch", "test_unified_search.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 5.887076258659363e-05, "outcome": "passed"}, "call": {"duration": 1.4128868849948049, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/test_unified_search.py", "lineno": 165, "message": "assert '<think>\\nThe user\\'s query \"VERL\" is quite ambiguous and does not provide specific information. To optimize it for retrieving relevant YouTube transcripts, we need to consider various possible variations or related terms people might use when searching for content containing the letters \\'V\\', \\'E\\', \\'R\\', and \\'L\\'. \\n\\nPossible optimizations could include:\\n- Verl\\n- verL (a lowercase variation)\\n- Valerie\\n- Verrill\\n- Ver L (indicating a word break at \"Ver\" and \"L\")\\n- ver-l\\n\\nThese variations may help in retrieving transcripts related to the letters \\'V\\', \\'E\\', \\'R\\', and \\'L\\'. The most specific one would be \"Verl\", as it\\'s likely what someone was actually searching for.\\n</think>\\n<answer>\\nVerl\\nverL\\nValerie\\nVerrill\\nver-l\\nVer L\\n</answer>' == 'VERL'\n  \n  - VERL\n  + <think>\n  + The user's query \"VERL\" is quite ambiguous and does not provide specific information. To optimize it for retrieving relevant YouTube transcripts, we need to consider various possible variations or related terms people might use when searching for content containing the letters 'V', 'E', 'R', and 'L'. \n  + \n  + Possible optimizations could include:\n  + - Verl\n  + - verL (a lowercase variation)\n  + - Valerie\n  + - Verrill\n  + - Ver L (indicating a word break at \"Ver\" and \"L\")\n  + - ver-l\n  + \n  + These variations may help in retrieving transcripts related to the letters 'V', 'E', 'R', and 'L'. The most specific one would be \"Verl\", as it's likely what someone was actually searching for.\n  + </think>\n  + <answer>\n  + Verl\n  + verL\n  + Valerie\n  + Verrill\n  + ver-l\n  + Ver L\n  + </answer>"}, "traceback": [{"path": "tests/test_unified_search.py", "lineno": 165, "message": "in test_query_optimizer_directly"}], "log": [{"name": "youtube_transcripts.unified_search", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/unified_search.py", "filename": "unified_search.py", "module": "unified_search", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 106, "funcName": "_load_lora_adapter", "created": 1748440895.3544033, "msecs": 354.0, "relativeCreated": 38319.14448738098, "thread": 124596465674048, "threadName": "MainThread", "processName": "MainProcess", "process": 3087063}], "longrepr": "tests/test_unified_search.py:165: in test_query_optimizer_directly\n    assert result[\"original\"] == query\nE   assert '<think>\\nThe user\\'s query \"VERL\" is quite ambiguous and does not provide specific information. To optimize it for retrieving relevant YouTube transcripts, we need to consider various possible variations or related terms people might use when searching for content containing the letters \\'V\\', \\'E\\', \\'R\\', and \\'L\\'. \\n\\nPossible optimizations could include:\\n- Verl\\n- verL (a lowercase variation)\\n- Valerie\\n- Verrill\\n- Ver L (indicating a word break at \"Ver\" and \"L\")\\n- ver-l\\n\\nThese variations may help in retrieving transcripts related to the letters \\'V\\', \\'E\\', \\'R\\', and \\'L\\'. The most specific one would be \"Verl\", as it\\'s likely what someone was actually searching for.\\n</think>\\n<answer>\\nVerl\\nverL\\nValerie\\nVerrill\\nver-l\\nVer L\\n</answer>' == 'VERL'\nE     \nE     - VERL\nE     + <think>\nE     + The user's query \"VERL\" is quite ambiguous and does not provide specific information. To optimize it for retrieving relevant YouTube transcripts, we need to consider various possible variations or related terms people might use when searching for content containing the letters 'V', 'E', 'R', and 'L'. \nE     + \nE     + Possible optimizations could include:\nE     + - Verl\nE     + - verL (a lowercase variation)\nE     + - Valerie\nE     + - Verrill\nE     + - Ver L (indicating a word break at \"Ver\" and \"L\")\nE     + - ver-l\nE     + \nE     + These variations may help in retrieving transcripts related to the letters 'V', 'E', 'R', and 'L'. The most specific one would be \"Verl\", as it's likely what someone was actually searching for.\nE     + </think>\nE     + <answer>\nE     + Verl\nE     + verL\nE     + Valerie\nE     + Verrill\nE     + ver-l\nE     + Ver L\nE     + </answer>"}, "teardown": {"duration": 6.817188113927841e-05, "outcome": "passed"}}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_empty_query_handling", "lineno": 169, "outcome": "passed", "keywords": ["test_empty_query_handling", "TestUnifiedSearch", "test_unified_search.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.008514839224517345, "outcome": "passed"}, "call": {"duration": 0.021122139878571033, "outcome": "passed", "log": [{"name": "youtube_transcripts.unified_search", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/unified_search.py", "filename": "unified_search.py", "module": "unified_search", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 106, "funcName": "_load_lora_adapter", "created": 1748440896.778357, "msecs": 778.0, "relativeCreated": 39743.09825897217, "thread": 124596465674048, "threadName": "MainThread", "processName": "MainProcess", "process": 3087063}]}, "teardown": {"duration": 0.0001347423531115055, "outcome": "passed"}}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_multi_word_search", "lineno": 183, "outcome": "passed", "keywords": ["test_multi_word_search", "TestUnifiedSearch", "test_unified_search.py", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.007422347087413073, "outcome": "passed"}, "call": {"duration": 0.021121270023286343, "outcome": "passed", "log": [{"name": "youtube_transcripts.unified_search", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/unified_search.py", "filename": "unified_search.py", "module": "unified_search", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 106, "funcName": "_load_lora_adapter", "created": 1748440896.8067172, "msecs": 806.0, "relativeCreated": 39771.45838737488, "thread": 124596465674048, "threadName": "MainThread", "processName": "MainProcess", "process": 3087063}]}, "teardown": {"duration": 0.0001750737428665161, "outcome": "passed"}}], "warnings": [{"message": "Exception in thread Thread-19\n\nTraceback (most recent call last):\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 107, in run\n    future.get_loop().call_soon_threadsafe(set_result, future, result)\n  File \"/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/base_events.py\", line 807, in call_soon_threadsafe\n    self._check_closed()\n  File \"/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/base_events.py\", line 520, in _check_closed\n    raise RuntimeError('Event loop is closed')\nRuntimeError: Event loop is closed\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/threading.py\", line 1045, in _bootstrap_inner\n    self.run()\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 110, in run\n    future.get_loop().call_soon_threadsafe(set_exception, future, e)\n  File \"/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/base_events.py\", line 807, in call_soon_threadsafe\n    self._check_closed()\n  File \"/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/base_events.py\", line 520, in _check_closed\n    raise RuntimeError('Event loop is closed')\nRuntimeError: Event loop is closed\n", "category": "PytestUnhandledThreadExceptionWarning", "when": "runtest", "filename": "/home/graham/.venv/lib/python3.11/site-packages/_pytest/threadexception.py", "lineno": 82}, {"message": "Exception ignored in: <coroutine object AsyncAgentManager._execute_agent_task at 0x714ff06ee110>\n\nTraceback (most recent call last):\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/base_agent.py\", line 45, in send_message\n    await db.commit()\nGeneratorExit\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/agent_manager.py\", line 122, in _execute_agent_task\n    result = await agent.execute(task_id, config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/search_optimizer_agent.py\", line 22, in execute\n    return await self._optimize_queries(task_id, config)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/search_optimizer_agent.py\", line 68, in _optimize_queries\n    await self.send_message(\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/base_agent.py\", line 39, in send_message\n    async with aiosqlite.connect(self.db_path) as db:\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 146, in __aexit__\n    await self.close()\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 168, in close\n    await self._execute(self._conn.close)\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 118, in _execute\n    future = asyncio.get_event_loop().create_future()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/events.py\", line 681, in get_event_loop\n    raise RuntimeError('There is no current event loop in thread %r.'\nRuntimeError: There is no current event loop in thread 'Dummy-28'.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/agent_manager.py\", line 142, in _execute_agent_task\n    await self._update_task_status(\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/agent_manager.py\", line 157, in _update_task_status\n    async with aiosqlite.connect(self.db_path) as db:\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 143, in __aenter__\n    return await self\n           ^^^^^^^^^^\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 128, in _connect\n    future = asyncio.get_event_loop().create_future()\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/graham/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/asyncio/events.py\", line 681, in get_event_loop\n    raise RuntimeError('There is no current event loop in thread %r.'\nRuntimeError: There is no current event loop in thread 'Dummy-28'.\n", "category": "PytestUnraisableExceptionWarning", "when": "runtest", "filename": "/home/graham/.venv/lib/python3.11/site-packages/_pytest/unraisableexception.py", "lineno": 85}, {"message": "Exception ignored in: <coroutine object AsyncAgentManager._execute_agent_task at 0x714ff06eee30>\n\nTraceback (most recent call last):\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/agent_manager.py\", line 122, in _execute_agent_task\n    result = await agent.execute(task_id, config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/search_optimizer_agent.py\", line 22, in execute\n    return await self._optimize_queries(task_id, config)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/search_optimizer_agent.py\", line 68, in _optimize_queries\n    await self.send_message(\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/base_agent.py\", line 39, in send_message\n    async with aiosqlite.connect(self.db_path) as db:\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 143, in __aenter__\n    return await self\n           ^^^^^^^^^^\n  File \"/home/graham/.venv/lib/python3.11/site-packages/aiosqlite/core.py\", line 130, in _connect\n    self._connection = await future\n                       ^^^^^^^^^^^^\nasyncio.exceptions.CancelledError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/agents/agent_manager.py\", line 140, in _execute_agent_task\n    await self._update_task_status(task_id, TaskStatus.CANCELLED)\nRuntimeError: coroutine ignored GeneratorExit\n", "category": "PytestUnraisableExceptionWarning", "when": "runtest", "filename": "/home/graham/.venv/lib/python3.11/site-packages/_pytest/unraisableexception.py", "lineno": 85}]}