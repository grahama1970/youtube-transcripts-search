{"created": 1749141314.829505, "duration": 3.2571518421173096, "exitcode": 2, "root": "/home/graham/workspace/experiments/youtube_transcripts", "environment": {}, "summary": {"total": 0, "collected": 82}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/agents/test_agents.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/graham/workspace/experiments/youtube_transcripts/tests/agents/test_agents.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.12/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/agents/test_agents.py:16: in <module>\n    from youtube_transcripts.agents.search_optimizer_agent import SearchOptimizerAgent\nsrc/youtube_transcripts/agents/search_optimizer_agent.py:3: in <module>\n    from youtube_transcripts.unified_search_enhanced import EnhancedDeepRetrievalOptimizer\nE   ModuleNotFoundError: No module named 'youtube_transcripts.unified_search_enhanced'"}, {"nodeid": "tests/agents", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_agents.py", "type": "Module"}]}, {"nodeid": "tests/archive/test_entity_extraction.py::TestEntityExtraction", "outcome": "passed", "result": [{"nodeid": "tests/archive/test_entity_extraction.py::TestEntityExtraction::test_extract_entities_basic", "type": "Function", "lineno": 75}, {"nodeid": "tests/archive/test_entity_extraction.py::TestEntityExtraction::test_entity_deduplication", "type": "Function", "lineno": 164}, {"nodeid": "tests/archive/test_entity_extraction.py::TestEntityExtraction::test_empty_transcript", "type": "Function", "lineno": 238}, {"nodeid": "tests/archive/test_entity_extraction.py::TestEntityExtraction::test_entity_confidence_scores", "type": "Function", "lineno": 301}, {"nodeid": "tests/archive/test_entity_extraction.py::TestEntityExtraction::test_malformed_input", "type": "Function", "lineno": 384}]}, {"nodeid": "tests/archive/test_entity_extraction.py", "outcome": "passed", "result": [{"nodeid": "tests/archive/test_entity_extraction.py::TestEntityExtraction", "type": "Class"}]}, {"nodeid": "tests/archive/test_hybrid_search.py::TestHybridSearch", "outcome": "passed", "result": [{"nodeid": "tests/archive/test_hybrid_search.py::TestHybridSearch::test_hybrid_search_fallback", "type": "Function", "lineno": 154}, {"nodeid": "tests/archive/test_hybrid_search.py::TestHybridSearch::test_hybrid_search_with_filters", "type": "Function", "lineno": 235}, {"nodeid": "tests/archive/test_hybrid_search.py::TestHybridSearch::test_hybrid_search_performance", "type": "Function", "lineno": 298}]}, {"nodeid": "tests/archive/test_hybrid_search.py", "outcome": "passed", "result": [{"nodeid": "tests/archive/test_hybrid_search.py::TestHybridSearch", "type": "Class"}]}, {"nodeid": "tests/archive/test_integration_complete.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/graham/workspace/experiments/youtube_transcripts/tests/archive/test_integration_complete.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.12/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/archive/test_integration_complete.py:20: in <module>\n    from arangodb.core.utils.test_reporter import TestReporter\nE   ModuleNotFoundError: No module named 'arangodb'"}, {"nodeid": "tests/archive/test_relationship_extraction.py::TestRelationshipExtraction", "outcome": "passed", "result": [{"nodeid": "tests/archive/test_relationship_extraction.py::TestRelationshipExtraction::test_extract_relationships_basic", "type": "Function", "lineno": 84}, {"nodeid": "tests/archive/test_relationship_extraction.py::TestRelationshipExtraction::test_temporal_relationships", "type": "Function", "lineno": 160}, {"nodeid": "tests/archive/test_relationship_extraction.py::TestRelationshipExtraction::test_shared_entity_relationships", "type": "Function", "lineno": 264}]}, {"nodeid": "tests/archive/test_relationship_extraction.py", "outcome": "passed", "result": [{"nodeid": "tests/archive/test_relationship_extraction.py::TestRelationshipExtraction", "type": "Class"}]}, {"nodeid": "tests/archive", "outcome": "passed", "result": [{"nodeid": "tests/archive/test_entity_extraction.py", "type": "Module"}, {"nodeid": "tests/archive/test_hybrid_search.py", "type": "Module"}, {"nodeid": "tests/archive/test_integration_complete.py", "type": "Module"}, {"nodeid": "tests/archive/test_relationship_extraction.py", "type": "Module"}]}, {"nodeid": "tests/cli", "outcome": "passed", "result": []}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_initialize_database_creates_tables", "type": "Function", "lineno": 37}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_add_transcript_with_real_data", "type": "Function", "lineno": 56}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_transcripts_with_special_characters", "type": "Function", "lineno": 90}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_ranking_with_real_data", "type": "Function", "lineno": 128}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_channel_filtering", "type": "Function", "lineno": 170}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_cleanup_old_transcripts", "type": "Function", "lineno": 193}]}, {"nodeid": "tests/core/test_database.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py::TestDatabaseOperations", "type": "Class"}]}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube", "outcome": "passed", "result": [{"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_extract_video_id", "type": "Function", "lineno": 23}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_fetch_real_transcript", "type": "Function", "lineno": 37}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_get_channel_videos_real", "type": "Function", "lineno": 54}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_process_channels_with_empty_list", "type": "Function", "lineno": 78}]}, {"nodeid": "tests/core/test_youtube.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_youtube.py::TestRealYouTube", "type": "Class"}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/graham/workspace/experiments/youtube_transcripts/tests/core/utils/test_scientific_extractors.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.12/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/core/utils/test_scientific_extractors.py:14: in <module>\n    from youtube_transcripts.core.utils.spacy_scientific import ScientificPipeline\nsrc/youtube_transcripts/core/utils/__init__.py:3: in <module>\n    from .tree_sitter_utils import extract_code_metadata\nsrc/youtube_transcripts/core/utils/tree_sitter_utils.py:29: in <module>\n    from .tree_sitter_extractors import (\nsrc/youtube_transcripts/core/utils/tree_sitter_extractors.py:20: in <module>\n    from tree_sitter import Node\nE   ModuleNotFoundError: No module named 'tree_sitter'"}, {"nodeid": "tests/core/utils", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py", "type": "Module"}]}, {"nodeid": "tests/core", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py", "type": "Module"}, {"nodeid": "tests/core/test_youtube.py", "type": "Module"}, {"nodeid": "tests/core/utils", "type": "Package"}]}, {"nodeid": "tests/integration/test_arangodb_features.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.12/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/integration/test_arangodb_features.py:39: in <module>\n    from youtube_transcripts.research_analyzer import ResearchAnalyzer\nsrc/youtube_transcripts/research_analyzer.py:35: in <module>\n    from sentence_transformers import SentenceTransformer\nE   ModuleNotFoundError: No module named 'sentence_transformers'"}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arxiv_youtube_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.12/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/integration/test_arxiv_youtube_integration.py:23: in <module>\n    from youtube_transcripts.metadata_extractor import MetadataExtractor\nsrc/youtube_transcripts/metadata_extractor.py:32: in <module>\n    from src.youtube_transcripts.core.utils.embedding_wrapper import EmbeddingUtils\nsrc/youtube_transcripts/core/utils/__init__.py:3: in <module>\n    from .tree_sitter_utils import extract_code_metadata\nsrc/youtube_transcripts/core/utils/tree_sitter_utils.py:29: in <module>\n    from .tree_sitter_extractors import (\nsrc/youtube_transcripts/core/utils/tree_sitter_extractors.py:20: in <module>\n    from tree_sitter import Node\nE   ModuleNotFoundError: No module named 'tree_sitter'"}, {"nodeid": "tests/integration/test_database_adapter.py::TestReport", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_initialization", "type": "Coroutine", "lineno": 123}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_store_and_retrieve", "type": "Coroutine", "lineno": 161}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_search", "type": "Coroutine", "lineno": 199}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_evidence_finding", "type": "Coroutine", "lineno": 237}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_auto_detection", "type": "Coroutine", "lineno": 271}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_forced_backends", "type": "Coroutine", "lineno": 296}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_adapter_interface", "type": "Coroutine", "lineno": 329}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_config_from_env", "type": "Function", "lineno": 372}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_backend_config_generation", "type": "Function", "lineno": 405}]}, {"nodeid": "tests/integration/test_database_adapter.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestReport", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::test_full_integration_flow", "type": "Coroutine", "lineno": 430}]}, {"nodeid": "tests/integration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arangodb_features.py", "type": "Module"}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_database_adapter.py", "type": "Module"}]}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_module_attributes", "type": "Coroutine", "lineno": 30}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_standardized_response_format", "type": "Coroutine", "lineno": 45}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_error_response_format", "type": "Coroutine", "lineno": 71}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_fetch_transcript_missing_params", "type": "Coroutine", "lineno": 91}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_search_transcripts", "type": "Coroutine", "lineno": 105}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_get_channel_videos", "type": "Coroutine", "lineno": 126}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_transcript", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_video_id", "type": "Coroutine", "lineno": 164}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_with_id", "type": "Coroutine", "lineno": 180}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_missing_params", "type": "Coroutine", "lineno": 200}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_multiple_actions_sequence", "type": "Coroutine", "lineno": 215}]}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized", "type": "Class"}]}, {"nodeid": "tests/level_0", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py", "type": "Module"}]}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_registry_creation", "type": "Function", "lineno": 22}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_register_prompt", "type": "Function", "lineno": 29}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_get_prompt", "type": "Function", "lineno": 51}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_prompt", "type": "Coroutine", "lineno": 66}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_with_registry_injection", "type": "Coroutine", "lineno": 78}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_prompt_parameters_extraction", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_registration", "type": "Function", "lineno": 124}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_with_examples", "type": "Function", "lineno": 146}]}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_basic_formatting", "type": "Function", "lineno": 169}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_next_steps", "type": "Function", "lineno": 176}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_suggestions", "type": "Function", "lineno": 188}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_data", "type": "Function", "lineno": 203}]}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_prompt_to_schema", "type": "Function", "lineno": 220}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_registry_to_schema", "type": "Function", "lineno": 241}]}, {"nodeid": "tests/mcp/test_prompts.py", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::test_full_prompt_workflow", "type": "Coroutine", "lineno": 263}, {"nodeid": "tests/mcp/test_prompts.py::test_error_handling", "type": "Coroutine", "lineno": 301}]}, {"nodeid": "tests/mcp", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py", "type": "Module"}]}, {"nodeid": "tests/scenarios/test_level0_scenarios.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/graham/workspace/experiments/youtube_transcripts/tests/scenarios/test_level0_scenarios.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.12/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/scenarios/test_level0_scenarios.py:20: in <module>\n    from youtube_transcripts.core.database import Database\nE   ImportError: cannot import name 'Database' from 'youtube_transcripts.core.database' (/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/core/database.py)"}, {"nodeid": "tests/scenarios", "outcome": "passed", "result": [{"nodeid": "tests/scenarios/test_level0_scenarios.py", "type": "Module"}]}, {"nodeid": "tests/test_all_integrations.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_arangodb_connection.py", "outcome": "passed", "result": [{"nodeid": "tests/test_arangodb_connection.py::test_connection", "type": "Function", "lineno": 31}]}, {"nodeid": "tests/test_integration_summary.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/graham/workspace/experiments/youtube_transcripts/tests/test_integration_summary.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n.venv/lib/python3.12/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:185: in exec_module\n    exec(co, module.__dict__)\ntests/test_integration_summary.py:16: in <module>\n    from youtube_transcripts.research_analyzer import ResearchAnalyzer\nsrc/youtube_transcripts/research_analyzer.py:35: in <module>\n    from sentence_transformers import SentenceTransformer\nE   ModuleNotFoundError: No module named 'sentence_transformers'"}, {"nodeid": "tests/test_minimal.py", "outcome": "passed", "result": [{"nodeid": "tests/test_minimal.py::test_basic", "type": "Function", "lineno": 2}, {"nodeid": "tests/test_minimal.py::test_import_youtube_transcripts", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_minimal.py::test_import_agents", "type": "Function", "lineno": 11}, {"nodeid": "tests/test_minimal.py::test_import_agent_manager", "type": "Function", "lineno": 16}]}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass", "outcome": "passed", "result": [{"nodeid": "tests/test_reporter_verification.py::TestReporterClass::test_class_method", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass::test_class_method_with_fixture", "type": "Function", "lineno": 42}]}, {"nodeid": "tests/test_reporter_verification.py", "outcome": "passed", "result": [{"nodeid": "tests/test_reporter_verification.py::test_reporter_basic", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_with_output", "type": "Function", "lineno": 11}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_failure_example", "type": "Function", "lineno": 18}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_with_marker", "type": "Function", "lineno": 26}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass", "type": "Class"}]}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening", "outcome": "passed", "result": [{"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_exact_match_no_widening", "type": "Function", "lineno": 60}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_synonym_expansion", "type": "Function", "lineno": 71}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_fuzzy_matching", "type": "Function", "lineno": 86}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_no_results_after_widening", "type": "Function", "lineno": 97}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_widening_with_channels", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_semantic_expansion", "type": "Function", "lineno": 120}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_widening_explanation", "type": "Function", "lineno": 141}]}, {"nodeid": "tests/test_search_widening.py", "outcome": "passed", "result": [{"nodeid": "tests/test_search_widening.py::TestSearchWidening", "type": "Class"}]}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_basic_search_without_optimization", "type": "Function", "lineno": 74}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_search_with_optimization", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_channel_specific_search", "type": "Function", "lineno": 124}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_query_optimizer_directly", "type": "Function", "lineno": 145}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_empty_query_handling", "type": "Function", "lineno": 169}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_multi_word_search", "type": "Function", "lineno": 183}]}, {"nodeid": "tests/test_unified_search.py", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "type": "Class"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/agents", "type": "Package"}, {"nodeid": "tests/archive", "type": "Dir"}, {"nodeid": "tests/cli", "type": "Package"}, {"nodeid": "tests/core", "type": "Package"}, {"nodeid": "tests/integration", "type": "Dir"}, {"nodeid": "tests/level_0", "type": "Package"}, {"nodeid": "tests/mcp", "type": "Package"}, {"nodeid": "tests/scenarios", "type": "Dir"}, {"nodeid": "tests/test_all_integrations.py", "type": "Module"}, {"nodeid": "tests/test_arangodb_connection.py", "type": "Module"}, {"nodeid": "tests/test_integration_summary.py", "type": "Module"}, {"nodeid": "tests/test_minimal.py", "type": "Module"}, {"nodeid": "tests/test_reporter_verification.py", "type": "Module"}, {"nodeid": "tests/test_search_widening.py", "type": "Module"}, {"nodeid": "tests/test_unified_search.py", "type": "Module"}]}], "tests": [], "warnings": [{"message": "cannot collect test class 'TestReport' because it has a __init__ constructor (from: tests/integration/test_database_adapter.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_database_adapter.py", "lineno": 35}]}