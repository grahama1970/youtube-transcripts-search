{"created": 1749141734.955443, "duration": 15.962884902954102, "exitcode": 1, "root": "/home/graham/workspace/experiments/youtube_transcripts", "environment": {}, "summary": {"passed": 1, "failed": 1, "total": 2, "collected": 122}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_manager_task_submission", "type": "Coroutine", "lineno": 37}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_search_optimizer_agent_execution", "type": "Coroutine", "lineno": 63}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_progress_tracking", "type": "Coroutine", "lineno": 91}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_message_passing", "type": "Coroutine", "lineno": 112}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_concurrent_agent_execution", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_error_handling", "type": "Coroutine", "lineno": 168}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_task_cancellation", "type": "Coroutine", "lineno": 187}]}, {"nodeid": "tests/agents/test_agents.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_agents.py::TestAgentSystem", "type": "Class"}]}, {"nodeid": "tests/agents", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_agents.py", "type": "Module"}]}, {"nodeid": "tests/cli", "outcome": "passed", "result": []}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_initialize_database_creates_tables", "type": "Function", "lineno": 37}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_add_transcript_with_real_data", "type": "Function", "lineno": 56}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_transcripts_with_special_characters", "type": "Function", "lineno": 90}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_ranking_with_real_data", "type": "Function", "lineno": 128}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_channel_filtering", "type": "Function", "lineno": 170}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_cleanup_old_transcripts", "type": "Function", "lineno": 193}]}, {"nodeid": "tests/core/test_database.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py::TestDatabaseOperations", "type": "Class"}]}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube", "outcome": "passed", "result": [{"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_extract_video_id", "type": "Function", "lineno": 23}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_fetch_real_transcript", "type": "Function", "lineno": 37}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_get_channel_videos_real", "type": "Function", "lineno": 54}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_process_channels_with_empty_list", "type": "Function", "lineno": 78}]}, {"nodeid": "tests/core/test_youtube.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_youtube.py::TestRealYouTube", "type": "Class"}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_pipeline_initialization", "type": "Function", "lineno": 23}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_citation_detection", "type": "Function", "lineno": 31}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_institution_recognition", "type": "Function", "lineno": 48}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_technical_term_extraction", "type": "Function", "lineno": 62}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_speaker_extraction_in_pipeline", "type": "Function", "lineno": 79}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_arxiv_detection", "type": "Function", "lineno": 97}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_doi_detection", "type": "Function", "lineno": 113}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_author_year_detection", "type": "Function", "lineno": 128}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_citation_formatting", "type": "Function", "lineno": 144}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_introduction_extraction", "type": "Function", "lineno": 176}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_labeled_speaker_extraction", "type": "Function", "lineno": 195}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_speaker_deduplication", "type": "Function", "lineno": 217}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_speaker_formatting", "type": "Function", "lineno": 231}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_content_type_classification", "type": "Function", "lineno": 258}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_academic_level_classification", "type": "Function", "lineno": 291}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_topic_extraction", "type": "Function", "lineno": 324}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_quality_indicators", "type": "Function", "lineno": 343}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor::test_full_extraction", "type": "Function", "lineno": 373}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor::test_batch_extraction", "type": "Function", "lineno": 410}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestIntegration", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestIntegration::test_end_to_end_extraction", "type": "Function", "lineno": 437}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestIntegration", "type": "Class"}]}, {"nodeid": "tests/core/utils", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py", "type": "Module"}]}, {"nodeid": "tests/core", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py", "type": "Module"}, {"nodeid": "tests/core/test_youtube.py", "type": "Module"}, {"nodeid": "tests/core/utils", "type": "Package"}]}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_store_and_retrieve_with_embeddings", "type": "Coroutine", "lineno": 170}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_hybrid_search", "type": "Coroutine", "lineno": 190}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_citation_network", "type": "Coroutine", "lineno": 209}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_speaker_relationships", "type": "Coroutine", "lineno": 229}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_entity_linking", "type": "Coroutine", "lineno": 264}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_find_related_videos", "type": "Coroutine", "lineno": 302}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_research_analyzer_integration", "type": "Coroutine", "lineno": 320}]}, {"nodeid": "tests/integration/test_arangodb_features.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration", "type": "Class"}]}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_citation_validation_pipeline", "type": "Coroutine", "lineno": 86}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_research_enhancement_pipeline", "type": "Coroutine", "lineno": 113}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_cross_reference_search", "type": "Function", "lineno": 142}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_evidence_based_validation", "type": "Coroutine", "lineno": 162}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_unified_metadata_extraction", "type": "Function", "lineno": 201}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_research_discovery_workflow", "type": "Coroutine", "lineno": 230}]}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration", "type": "Class"}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestReportGenerator", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_initialization", "type": "Coroutine", "lineno": 123}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_store_and_retrieve", "type": "Coroutine", "lineno": 161}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_search", "type": "Coroutine", "lineno": 199}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_evidence_finding", "type": "Coroutine", "lineno": 237}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_auto_detection", "type": "Coroutine", "lineno": 271}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_forced_backends", "type": "Coroutine", "lineno": 296}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_adapter_interface", "type": "Coroutine", "lineno": 329}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_config_from_env", "type": "Function", "lineno": 372}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_backend_config_generation", "type": "Function", "lineno": 405}]}, {"nodeid": "tests/integration/test_database_adapter.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestReportGenerator", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::test_full_integration_flow", "type": "Coroutine", "lineno": 430}]}, {"nodeid": "tests/integration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arangodb_features.py", "type": "Module"}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_database_adapter.py", "type": "Module"}]}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_module_attributes", "type": "Coroutine", "lineno": 30}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_standardized_response_format", "type": "Coroutine", "lineno": 45}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_error_response_format", "type": "Coroutine", "lineno": 71}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_fetch_transcript_missing_params", "type": "Coroutine", "lineno": 91}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_search_transcripts", "type": "Coroutine", "lineno": 105}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_get_channel_videos", "type": "Coroutine", "lineno": 126}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_transcript", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_video_id", "type": "Coroutine", "lineno": 164}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_with_id", "type": "Coroutine", "lineno": 180}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_missing_params", "type": "Coroutine", "lineno": 200}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_multiple_actions_sequence", "type": "Coroutine", "lineno": 215}]}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized", "type": "Class"}]}, {"nodeid": "tests/level_0", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py", "type": "Module"}]}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_registry_creation", "type": "Function", "lineno": 22}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_register_prompt", "type": "Function", "lineno": 29}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_get_prompt", "type": "Function", "lineno": 51}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_prompt", "type": "Coroutine", "lineno": 66}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_with_registry_injection", "type": "Coroutine", "lineno": 78}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_prompt_parameters_extraction", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_registration", "type": "Function", "lineno": 124}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_with_examples", "type": "Function", "lineno": 146}]}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_basic_formatting", "type": "Function", "lineno": 169}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_next_steps", "type": "Function", "lineno": 176}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_suggestions", "type": "Function", "lineno": 188}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_data", "type": "Function", "lineno": 203}]}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_prompt_to_schema", "type": "Function", "lineno": 220}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_registry_to_schema", "type": "Function", "lineno": 241}]}, {"nodeid": "tests/mcp/test_prompts.py", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::test_full_prompt_workflow", "type": "Coroutine", "lineno": 263}, {"nodeid": "tests/mcp/test_prompts.py::test_error_handling", "type": "Coroutine", "lineno": 301}]}, {"nodeid": "tests/mcp", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py", "type": "Module"}]}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios", "outcome": "passed", "result": [{"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_1_basic_search", "type": "Function", "lineno": 45}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_2_search_with_no_results", "type": "Function", "lineno": 94}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_3_search_widening", "type": "Function", "lineno": 110}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_4_citation_extraction", "type": "Function", "lineno": 136}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_5_metadata_extraction", "type": "Function", "lineno": 168}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_6_channel_filtering", "type": "Function", "lineno": 204}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_7_youtube_api_search", "type": "Function", "lineno": 236}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_8_fetch_transcript", "type": "Function", "lineno": 264}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_9_search_pagination", "type": "Function", "lineno": 287}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_10_scientific_classification", "type": "Function", "lineno": 319}]}, {"nodeid": "tests/scenarios/test_level0_scenarios.py", "outcome": "passed", "result": [{"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios", "type": "Class"}]}, {"nodeid": "tests/scenarios", "outcome": "passed", "result": [{"nodeid": "tests/scenarios/test_level0_scenarios.py", "type": "Module"}]}, {"nodeid": "tests/test_all_integrations.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_arangodb_connection.py", "outcome": "passed", "result": [{"nodeid": "tests/test_arangodb_connection.py::test_connection", "type": "Function", "lineno": 31}]}, {"nodeid": "tests/test_integration_summary.py", "outcome": "passed", "result": [{"nodeid": "tests/test_integration_summary.py::test_integration", "type": "Coroutine", "lineno": 18}]}, {"nodeid": "tests/test_minimal.py", "outcome": "passed", "result": [{"nodeid": "tests/test_minimal.py::test_basic", "type": "Function", "lineno": 2}, {"nodeid": "tests/test_minimal.py::test_import_youtube_transcripts", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_minimal.py::test_import_agents", "type": "Function", "lineno": 11}, {"nodeid": "tests/test_minimal.py::test_import_agent_manager", "type": "Function", "lineno": 16}]}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass", "outcome": "passed", "result": [{"nodeid": "tests/test_reporter_verification.py::TestReporterClass::test_class_method", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass::test_class_method_with_fixture", "type": "Function", "lineno": 42}]}, {"nodeid": "tests/test_reporter_verification.py", "outcome": "passed", "result": [{"nodeid": "tests/test_reporter_verification.py::test_reporter_basic", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_with_output", "type": "Function", "lineno": 11}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_failure_example", "type": "Function", "lineno": 18}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_with_marker", "type": "Function", "lineno": 26}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass", "type": "Class"}]}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening", "outcome": "passed", "result": [{"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_exact_match_no_widening", "type": "Function", "lineno": 60}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_synonym_expansion", "type": "Function", "lineno": 71}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_fuzzy_matching", "type": "Function", "lineno": 86}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_no_results_after_widening", "type": "Function", "lineno": 97}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_widening_with_channels", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_semantic_expansion", "type": "Function", "lineno": 120}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_widening_explanation", "type": "Function", "lineno": 141}]}, {"nodeid": "tests/test_search_widening.py", "outcome": "passed", "result": [{"nodeid": "tests/test_search_widening.py::TestSearchWidening", "type": "Class"}]}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_basic_search_without_optimization", "type": "Function", "lineno": 74}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_search_with_optimization", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_channel_specific_search", "type": "Function", "lineno": 124}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_query_optimizer_directly", "type": "Function", "lineno": 145}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_empty_query_handling", "type": "Function", "lineno": 169}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_multi_word_search", "type": "Function", "lineno": 183}]}, {"nodeid": "tests/test_unified_search.py", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "type": "Class"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/agents", "type": "Package"}, {"nodeid": "tests/cli", "type": "Package"}, {"nodeid": "tests/core", "type": "Package"}, {"nodeid": "tests/integration", "type": "Dir"}, {"nodeid": "tests/level_0", "type": "Package"}, {"nodeid": "tests/mcp", "type": "Package"}, {"nodeid": "tests/scenarios", "type": "Dir"}, {"nodeid": "tests/test_all_integrations.py", "type": "Module"}, {"nodeid": "tests/test_arangodb_connection.py", "type": "Module"}, {"nodeid": "tests/test_integration_summary.py", "type": "Module"}, {"nodeid": "tests/test_minimal.py", "type": "Module"}, {"nodeid": "tests/test_reporter_verification.py", "type": "Module"}, {"nodeid": "tests/test_search_widening.py", "type": "Module"}, {"nodeid": "tests/test_unified_search.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_manager_task_submission", "lineno": 37, "outcome": "passed", "keywords": ["test_agent_manager_task_submission", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.009829191025346518, "outcome": "passed"}, "call": {"duration": 1.0089352587237954, "outcome": "passed"}, "teardown": {"duration": 0.000432359054684639, "outcome": "passed"}}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_search_optimizer_agent_execution", "lineno": 63, "outcome": "failed", "keywords": ["test_search_optimizer_agent_execution", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0079874019138515, "outcome": "passed"}, "call": {"duration": 0.005969128105789423, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/agents/test_agents.py", "lineno": 86, "message": "AssertionError: assert 'Volcano Engine' in 'VERL youtube tutorial'"}, "traceback": [{"path": "tests/agents/test_agents.py", "lineno": 86, "message": "in test_search_optimizer_agent_execution"}], "longrepr": "tests/agents/test_agents.py:86: in test_search_optimizer_agent_execution\n    assert \"Volcano Engine\" in verl_opt[\"optimized\"]\nE   AssertionError: assert 'Volcano Engine' in 'VERL youtube tutorial'"}, "teardown": {"duration": 0.0004103491082787514, "outcome": "passed"}}], "warnings": [{"message": "cannot collect test class 'TestReportGenerator' because it has a __init__ constructor (from: tests/integration/test_database_adapter.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_database_adapter.py", "lineno": 35}]}