{"created": 1749156763.1808321, "duration": 88.54377722740173, "exitcode": 3, "root": "/home/graham/workspace/experiments/youtube_transcripts", "environment": {}, "summary": {"passed": 78, "skipped": 8, "failed": 5, "total": 91, "collected": 127, "deselected": 5}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_manager_task_submission", "type": "Coroutine", "lineno": 37}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_search_optimizer_agent_execution", "type": "Coroutine", "lineno": 63}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_progress_tracking", "type": "Coroutine", "lineno": 91}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_message_passing", "type": "Coroutine", "lineno": 112}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_concurrent_agent_execution", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_error_handling", "type": "Coroutine", "lineno": 168}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_task_cancellation", "type": "Coroutine", "lineno": 187}]}, {"nodeid": "tests/agents/test_agents.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_agents.py::TestAgentSystem", "type": "Class"}]}, {"nodeid": "tests/agents", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_agents.py", "type": "Module"}]}, {"nodeid": "tests/cli", "outcome": "passed", "result": []}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_initialize_database_creates_tables", "type": "Function", "lineno": 37}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_add_transcript_with_real_data", "type": "Function", "lineno": 56}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_transcripts_with_special_characters", "type": "Function", "lineno": 90}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_ranking_with_real_data", "type": "Function", "lineno": 128}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_channel_filtering", "type": "Function", "lineno": 170}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_cleanup_old_transcripts", "type": "Function", "lineno": 193}]}, {"nodeid": "tests/core/test_database.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py::TestDatabaseOperations", "type": "Class"}]}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube", "outcome": "passed", "result": [{"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_extract_video_id", "type": "Function", "lineno": 23}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_fetch_real_transcript", "type": "Function", "lineno": 37}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_get_channel_videos_real", "type": "Function", "lineno": 54}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_process_channels_with_empty_list", "type": "Function", "lineno": 78}]}, {"nodeid": "tests/core/test_youtube.py", "outcome": "passed", "result": [{"nodeid": "tests/core/test_youtube.py::TestRealYouTube", "type": "Class"}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_pipeline_initialization", "type": "Function", "lineno": 23}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_citation_detection", "type": "Function", "lineno": 31}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_institution_recognition", "type": "Function", "lineno": 48}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_technical_term_extraction", "type": "Function", "lineno": 62}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_speaker_extraction_in_pipeline", "type": "Function", "lineno": 79}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_arxiv_detection", "type": "Function", "lineno": 97}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_doi_detection", "type": "Function", "lineno": 113}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_author_year_detection", "type": "Function", "lineno": 128}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_citation_formatting", "type": "Function", "lineno": 142}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_introduction_extraction", "type": "Function", "lineno": 174}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_labeled_speaker_extraction", "type": "Function", "lineno": 193}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_speaker_deduplication", "type": "Function", "lineno": 215}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_speaker_formatting", "type": "Function", "lineno": 229}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_content_type_classification", "type": "Function", "lineno": 256}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_academic_level_classification", "type": "Function", "lineno": 289}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_topic_extraction", "type": "Function", "lineno": 322}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_quality_indicators", "type": "Function", "lineno": 341}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor::test_full_extraction", "type": "Function", "lineno": 371}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor::test_batch_extraction", "type": "Function", "lineno": 408}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestIntegration", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestIntegration::test_end_to_end_extraction", "type": "Function", "lineno": 435}]}, {"nodeid": "tests/core/utils/test_scientific_extractors.py", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor", "type": "Class"}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestIntegration", "type": "Class"}]}, {"nodeid": "tests/core/utils", "outcome": "passed", "result": [{"nodeid": "tests/core/utils/test_scientific_extractors.py", "type": "Module"}]}, {"nodeid": "tests/core", "outcome": "passed", "result": [{"nodeid": "tests/core/test_database.py", "type": "Module"}, {"nodeid": "tests/core/test_youtube.py", "type": "Module"}, {"nodeid": "tests/core/utils", "type": "Package"}]}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_store_and_retrieve_with_embeddings", "type": "Coroutine", "lineno": 170}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_hybrid_search", "type": "Coroutine", "lineno": 190}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_citation_network", "type": "Coroutine", "lineno": 209}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_speaker_relationships", "type": "Coroutine", "lineno": 229}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_entity_linking", "type": "Coroutine", "lineno": 264}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_find_related_videos", "type": "Coroutine", "lineno": 302}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_research_analyzer_integration", "type": "Coroutine", "lineno": 320}]}, {"nodeid": "tests/integration/test_arangodb_features.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration", "type": "Class"}]}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_citation_validation_pipeline", "type": "Coroutine", "lineno": 86}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_research_enhancement_pipeline", "type": "Coroutine", "lineno": 114}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_cross_reference_search", "type": "Function", "lineno": 152}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_evidence_based_validation", "type": "Coroutine", "lineno": 172}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_unified_metadata_extraction", "type": "Function", "lineno": 211}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_research_discovery_workflow", "type": "Coroutine", "lineno": 241}]}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration", "type": "Class"}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestReportGenerator", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_initialization", "type": "Coroutine", "lineno": 123}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_store_and_retrieve", "type": "Coroutine", "lineno": 161}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_search", "type": "Coroutine", "lineno": 199}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_evidence_finding", "type": "Coroutine", "lineno": 237}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_auto_detection", "type": "Coroutine", "lineno": 271}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_forced_backends", "type": "Coroutine", "lineno": 296}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_adapter_interface", "type": "Coroutine", "lineno": 329}]}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_config_from_env", "type": "Function", "lineno": 372}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_backend_config_generation", "type": "Function", "lineno": 405}]}, {"nodeid": "tests/integration/test_database_adapter.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_database_adapter.py::TestReportGenerator", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig", "type": "Class"}, {"nodeid": "tests/integration/test_database_adapter.py::test_full_integration_flow", "type": "Coroutine", "lineno": 430}]}, {"nodeid": "tests/integration", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_arangodb_features.py", "type": "Module"}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_database_adapter.py", "type": "Module"}]}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_module_attributes", "type": "Coroutine", "lineno": 30}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_standardized_response_format", "type": "Coroutine", "lineno": 45}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_error_response_format", "type": "Coroutine", "lineno": 71}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_fetch_transcript_missing_params", "type": "Coroutine", "lineno": 91}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_search_transcripts", "type": "Coroutine", "lineno": 105}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_get_channel_videos", "type": "Coroutine", "lineno": 126}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_transcript", "type": "Coroutine", "lineno": 145}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_video_id", "type": "Coroutine", "lineno": 164}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_with_id", "type": "Coroutine", "lineno": 180}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_missing_params", "type": "Coroutine", "lineno": 200}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_multiple_actions_sequence", "type": "Coroutine", "lineno": 215}]}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized", "type": "Class"}]}, {"nodeid": "tests/level_0", "outcome": "passed", "result": [{"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py", "type": "Module"}]}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_registry_creation", "type": "Function", "lineno": 22}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_register_prompt", "type": "Function", "lineno": 29}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_get_prompt", "type": "Function", "lineno": 51}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_prompt", "type": "Coroutine", "lineno": 66}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_with_registry_injection", "type": "Coroutine", "lineno": 78}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_prompt_parameters_extraction", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_registration", "type": "Function", "lineno": 124}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_with_examples", "type": "Function", "lineno": 146}]}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_basic_formatting", "type": "Function", "lineno": 169}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_next_steps", "type": "Function", "lineno": 176}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_suggestions", "type": "Function", "lineno": 188}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_data", "type": "Function", "lineno": 203}]}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_prompt_to_schema", "type": "Function", "lineno": 222}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_registry_to_schema", "type": "Function", "lineno": 243}]}, {"nodeid": "tests/mcp/test_prompts.py", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema", "type": "Class"}, {"nodeid": "tests/mcp/test_prompts.py::test_full_prompt_workflow", "type": "Coroutine", "lineno": 265}, {"nodeid": "tests/mcp/test_prompts.py::test_error_handling", "type": "Coroutine", "lineno": 304}]}, {"nodeid": "tests/mcp", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_prompts.py", "type": "Module"}]}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios", "outcome": "passed", "result": [{"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_1_basic_search", "type": "Function", "lineno": 47}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_2_search_with_no_results", "type": "Function", "lineno": 97}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_3_search_widening", "type": "Function", "lineno": 113}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_4_citation_extraction", "type": "Function", "lineno": 139}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_5_metadata_extraction", "type": "Function", "lineno": 172}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_6_channel_filtering", "type": "Function", "lineno": 221}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_7_youtube_api_search", "type": "Function", "lineno": 254}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_8_fetch_transcript", "type": "Function", "lineno": 282}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_9_search_pagination", "type": "Function", "lineno": 306}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_10_scientific_classification", "type": "Function", "lineno": 338}]}, {"nodeid": "tests/scenarios/test_level0_scenarios.py", "outcome": "passed", "result": [{"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios", "type": "Class"}]}, {"nodeid": "tests/scenarios", "outcome": "passed", "result": [{"nodeid": "tests/scenarios/test_level0_scenarios.py", "type": "Module"}]}, {"nodeid": "tests/test_all_integrations.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_arangodb_connection.py", "outcome": "passed", "result": [{"nodeid": "tests/test_arangodb_connection.py::test_connection", "type": "Function", "lineno": 31}]}, {"nodeid": "tests/test_honeypot.py::TestHoneypot", "outcome": "passed", "result": [{"nodeid": "tests/test_honeypot.py::TestHoneypot::test_impossible_assertion", "type": "Function", "lineno": 14, "deselected": true}, {"nodeid": "tests/test_honeypot.py::TestHoneypot::test_fake_network_call", "type": "Function", "lineno": 19, "deselected": true}, {"nodeid": "tests/test_honeypot.py::TestHoneypot::test_instant_database_operation", "type": "Function", "lineno": 28, "deselected": true}, {"nodeid": "tests/test_honeypot.py::TestHoneypot::test_zero_latency_api", "type": "Function", "lineno": 40, "deselected": true}, {"nodeid": "tests/test_honeypot.py::TestHoneypot::test_perfect_search_accuracy", "type": "Function", "lineno": 57, "deselected": true}]}, {"nodeid": "tests/test_honeypot.py", "outcome": "passed", "result": [{"nodeid": "tests/test_honeypot.py::TestHoneypot", "type": "Class"}]}, {"nodeid": "tests/test_integration_summary.py", "outcome": "passed", "result": [{"nodeid": "tests/test_integration_summary.py::test_integration", "type": "Coroutine", "lineno": 18}]}, {"nodeid": "tests/test_minimal.py", "outcome": "passed", "result": [{"nodeid": "tests/test_minimal.py::test_basic", "type": "Function", "lineno": 2}, {"nodeid": "tests/test_minimal.py::test_import_youtube_transcripts", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_minimal.py::test_import_agents", "type": "Function", "lineno": 11}, {"nodeid": "tests/test_minimal.py::test_import_agent_manager", "type": "Function", "lineno": 16}]}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass", "outcome": "passed", "result": [{"nodeid": "tests/test_reporter_verification.py::TestReporterClass::test_class_method", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass::test_class_method_with_fixture", "type": "Function", "lineno": 42}]}, {"nodeid": "tests/test_reporter_verification.py", "outcome": "passed", "result": [{"nodeid": "tests/test_reporter_verification.py::test_reporter_basic", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_with_output", "type": "Function", "lineno": 11}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_failure_example", "type": "Function", "lineno": 18}, {"nodeid": "tests/test_reporter_verification.py::test_reporter_with_marker", "type": "Function", "lineno": 26}, {"nodeid": "tests/test_reporter_verification.py::TestReporterClass", "type": "Class"}]}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening", "outcome": "passed", "result": [{"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_exact_match_no_widening", "type": "Function", "lineno": 60}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_synonym_expansion", "type": "Function", "lineno": 71}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_fuzzy_matching", "type": "Function", "lineno": 86}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_no_results_after_widening", "type": "Function", "lineno": 97}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_widening_with_channels", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_semantic_expansion", "type": "Function", "lineno": 120}, {"nodeid": "tests/test_search_widening.py::TestSearchWidening::test_widening_explanation", "type": "Function", "lineno": 141}]}, {"nodeid": "tests/test_search_widening.py", "outcome": "passed", "result": [{"nodeid": "tests/test_search_widening.py::TestSearchWidening", "type": "Class"}]}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_basic_search_without_optimization", "type": "Function", "lineno": 74}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_search_with_optimization", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_channel_specific_search", "type": "Function", "lineno": 124}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_query_optimizer_directly", "type": "Function", "lineno": 145}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_empty_query_handling", "type": "Function", "lineno": 170}, {"nodeid": "tests/test_unified_search.py::TestUnifiedSearch::test_multi_word_search", "type": "Function", "lineno": 184}]}, {"nodeid": "tests/test_unified_search.py", "outcome": "passed", "result": [{"nodeid": "tests/test_unified_search.py::TestUnifiedSearch", "type": "Class"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/agents", "type": "Package"}, {"nodeid": "tests/cli", "type": "Package"}, {"nodeid": "tests/core", "type": "Package"}, {"nodeid": "tests/integration", "type": "Dir"}, {"nodeid": "tests/level_0", "type": "Package"}, {"nodeid": "tests/mcp", "type": "Package"}, {"nodeid": "tests/scenarios", "type": "Dir"}, {"nodeid": "tests/test_all_integrations.py", "type": "Module"}, {"nodeid": "tests/test_arangodb_connection.py", "type": "Module"}, {"nodeid": "tests/test_honeypot.py", "type": "Module"}, {"nodeid": "tests/test_integration_summary.py", "type": "Module"}, {"nodeid": "tests/test_minimal.py", "type": "Module"}, {"nodeid": "tests/test_reporter_verification.py", "type": "Module"}, {"nodeid": "tests/test_search_widening.py", "type": "Module"}, {"nodeid": "tests/test_unified_search.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_manager_task_submission", "lineno": 37, "outcome": "passed", "keywords": ["test_agent_manager_task_submission", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.012304793111979961, "outcome": "passed"}, "call": {"duration": 0.01268774177879095, "outcome": "passed"}, "teardown": {"duration": 0.00033768778666853905, "outcome": "passed"}}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_search_optimizer_agent_execution", "lineno": 63, "outcome": "passed", "keywords": ["test_search_optimizer_agent_execution", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.007129924837499857, "outcome": "passed"}, "call": {"duration": 0.004612325690686703, "outcome": "passed"}, "teardown": {"duration": 0.0002954360097646713, "outcome": "passed"}}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_progress_tracking", "lineno": 91, "outcome": "passed", "keywords": ["test_agent_progress_tracking", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.007071163039654493, "outcome": "passed"}, "call": {"duration": 0.5040664696134627, "outcome": "passed"}, "teardown": {"duration": 0.000490112230181694, "outcome": "passed"}}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_message_passing", "lineno": 112, "outcome": "passed", "keywords": ["test_agent_message_passing", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.008471315260976553, "outcome": "passed"}, "call": {"duration": 0.004412792157381773, "outcome": "passed"}, "teardown": {"duration": 0.0002894969657063484, "outcome": "passed"}}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_concurrent_agent_execution", "lineno": 145, "outcome": "passed", "keywords": ["test_concurrent_agent_execution", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.006830527912825346, "outcome": "passed"}, "call": {"duration": 1.0209462731145322, "outcome": "passed"}, "teardown": {"duration": 0.0006572352722287178, "outcome": "passed"}}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_agent_error_handling", "lineno": 168, "outcome": "passed", "keywords": ["test_agent_error_handling", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.010855589993298054, "outcome": "passed"}, "call": {"duration": 1.0046254429034889, "outcome": "passed"}, "teardown": {"duration": 0.0005617029964923859, "outcome": "passed"}}, {"nodeid": "tests/agents/test_agents.py::TestAgentSystem::test_task_cancellation", "lineno": 187, "outcome": "passed", "keywords": ["test_task_cancellation", "asyncio", "pytestmark", "TestAgentSystem", "test_agents.py", "agents", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.007868831045925617, "outcome": "passed"}, "call": {"duration": 0.1045540189370513, "outcome": "passed"}, "teardown": {"duration": 0.00039517879486083984, "outcome": "passed"}}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_initialize_database_creates_tables", "lineno": 37, "outcome": "passed", "keywords": ["test_initialize_database_creates_tables", "TestDatabaseOperations", "test_database.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0024944371543824673, "outcome": "passed"}, "call": {"duration": 0.00027945591136813164, "outcome": "passed"}, "teardown": {"duration": 0.00014381296932697296, "outcome": "passed"}}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_add_transcript_with_real_data", "lineno": 56, "outcome": "passed", "keywords": ["test_add_transcript_with_real_data", "TestDatabaseOperations", "test_database.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0018166820518672466, "outcome": "passed"}, "call": {"duration": 0.001505924854427576, "outcome": "passed"}, "teardown": {"duration": 0.00014136312529444695, "outcome": "passed"}}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_transcripts_with_special_characters", "lineno": 90, "outcome": "passed", "keywords": ["test_search_transcripts_with_special_characters", "TestDatabaseOperations", "test_database.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.001857152208685875, "outcome": "passed"}, "call": {"duration": 0.0038098879158496857, "outcome": "passed"}, "teardown": {"duration": 0.00014088302850723267, "outcome": "passed"}}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_search_ranking_with_real_data", "lineno": 128, "outcome": "passed", "keywords": ["test_search_ranking_with_real_data", "TestDatabaseOperations", "test_database.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0018220520578324795, "outcome": "passed"}, "call": {"duration": 0.0030537000857293606, "outcome": "passed"}, "teardown": {"duration": 0.00015169288963079453, "outcome": "passed"}}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_channel_filtering", "lineno": 170, "outcome": "passed", "keywords": ["test_channel_filtering", "TestDatabaseOperations", "test_database.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0019449042156338692, "outcome": "passed"}, "call": {"duration": 0.004430701956152916, "outcome": "passed"}, "teardown": {"duration": 0.00014302320778369904, "outcome": "passed"}}, {"nodeid": "tests/core/test_database.py::TestDatabaseOperations::test_cleanup_old_transcripts", "lineno": 193, "outcome": "passed", "keywords": ["test_cleanup_old_transcripts", "TestDatabaseOperations", "test_database.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.001888412982225418, "outcome": "passed"}, "call": {"duration": 0.00463766697794199, "outcome": "passed"}, "teardown": {"duration": 0.00014278292655944824, "outcome": "passed"}}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_extract_video_id", "lineno": 23, "outcome": "passed", "keywords": ["test_extract_video_id", "TestRealYouTube", "test_youtube.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010339263826608658, "outcome": "passed"}, "call": {"duration": 0.0003496580757200718, "outcome": "passed"}, "teardown": {"duration": 7.962202653288841e-05, "outcome": "passed"}}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_fetch_real_transcript", "lineno": 37, "outcome": "skipped", "keywords": ["test_fetch_real_transcript", "slow", "pytestmark", "TestRealYouTube", "test_youtube.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.444216266274452e-05, "outcome": "passed"}, "call": {"duration": 0.7177133671939373, "outcome": "skipped", "stdout": "Error fetching transcript for jNQXAC9IVRw: no element found: line 1, column 0\n", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/core/test_youtube.py', 48, 'Skipped: Transcript not available for test video')"}, "teardown": {"duration": 0.00020007509738206863, "outcome": "passed"}}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_get_channel_videos_real", "lineno": 54, "outcome": "passed", "keywords": ["test_get_channel_videos_real", "slow", "pytestmark", "TestRealYouTube", "test_youtube.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00020790519192814827, "outcome": "passed"}, "call": {"duration": 9.831931735854596, "outcome": "passed", "stdout": "\nFetched 3 videos from channel\nFirst video: YouTube - Videos\n"}, "teardown": {"duration": 0.00011133216321468353, "outcome": "passed"}}, {"nodeid": "tests/core/test_youtube.py::TestRealYouTube::test_process_channels_with_empty_list", "lineno": 78, "outcome": "passed", "keywords": ["test_process_channels_with_empty_list", "TestRealYouTube", "test_youtube.py", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011207209900021553, "outcome": "passed"}, "call": {"duration": 0.0001126420684158802, "outcome": "passed"}, "teardown": {"duration": 8.265161886811256e-05, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_pipeline_initialization", "lineno": 23, "outcome": "passed", "keywords": ["test_pipeline_initialization", "TestScientificPipeline", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00031967833638191223, "outcome": "passed"}, "call": {"duration": 0.39918832993134856, "outcome": "passed"}, "teardown": {"duration": 0.0001116730272769928, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_citation_detection", "lineno": 31, "outcome": "passed", "keywords": ["test_citation_detection", "TestScientificPipeline", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011515291407704353, "outcome": "passed"}, "call": {"duration": 0.5279109990224242, "outcome": "passed"}, "teardown": {"duration": 0.00011536292731761932, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_institution_recognition", "lineno": 48, "outcome": "passed", "keywords": ["test_institution_recognition", "TestScientificPipeline", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011899275705218315, "outcome": "passed"}, "call": {"duration": 0.33354723872616887, "outcome": "passed"}, "teardown": {"duration": 0.00012620305642485619, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_technical_term_extraction", "lineno": 62, "outcome": "passed", "keywords": ["test_technical_term_extraction", "TestScientificPipeline", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0001165526919066906, "outcome": "passed"}, "call": {"duration": 0.34729993529617786, "outcome": "passed"}, "teardown": {"duration": 0.0001180628314614296, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestScientificPipeline::test_speaker_extraction_in_pipeline", "lineno": 79, "outcome": "passed", "keywords": ["test_speaker_extraction_in_pipeline", "TestScientificPipeline", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0001102830283343792, "outcome": "passed"}, "call": {"duration": 0.3334225849248469, "outcome": "passed"}, "teardown": {"duration": 0.00011802185326814651, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_arxiv_detection", "lineno": 97, "outcome": "passed", "keywords": ["test_arxiv_detection", "TestCitationDetector", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011743325740098953, "outcome": "passed"}, "call": {"duration": 0.3265833081677556, "outcome": "passed"}, "teardown": {"duration": 0.0001206318847835064, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_doi_detection", "lineno": 113, "outcome": "passed", "keywords": ["test_doi_detection", "TestCitationDetector", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011770334094762802, "outcome": "passed"}, "call": {"duration": 0.33233296032994986, "outcome": "passed"}, "teardown": {"duration": 0.00020586512982845306, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_author_year_detection", "lineno": 128, "outcome": "passed", "keywords": ["test_author_year_detection", "TestCitationDetector", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00021034525707364082, "outcome": "passed"}, "call": {"duration": 0.32681365218013525, "outcome": "passed"}, "teardown": {"duration": 0.00011564278975129128, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestCitationDetector::test_citation_formatting", "lineno": 142, "outcome": "passed", "keywords": ["test_citation_formatting", "TestCitationDetector", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0001096632331609726, "outcome": "passed"}, "call": {"duration": 0.32590625109151006, "outcome": "passed"}, "teardown": {"duration": 0.00011698296293616295, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_introduction_extraction", "lineno": 174, "outcome": "passed", "keywords": ["test_introduction_extraction", "TestSpeakerExtractor", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00012745335698127747, "outcome": "passed"}, "call": {"duration": 0.34459146996960044, "outcome": "passed"}, "teardown": {"duration": 0.00011302158236503601, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_labeled_speaker_extraction", "lineno": 193, "outcome": "passed", "keywords": ["test_labeled_speaker_extraction", "TestSpeakerExtractor", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011456292122602463, "outcome": "passed"}, "call": {"duration": 0.3777229003608227, "outcome": "passed"}, "teardown": {"duration": 0.00011472310870885849, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_speaker_deduplication", "lineno": 215, "outcome": "passed", "keywords": ["test_speaker_deduplication", "TestSpeakerExtractor", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011153286322951317, "outcome": "passed"}, "call": {"duration": 0.3307031490840018, "outcome": "passed"}, "teardown": {"duration": 0.00011383276432752609, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestSpeakerExtractor::test_speaker_formatting", "lineno": 229, "outcome": "passed", "keywords": ["test_speaker_formatting", "TestSpeakerExtractor", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011804280802607536, "outcome": "passed"}, "call": {"duration": 0.3201890178024769, "outcome": "passed"}, "teardown": {"duration": 0.0001398930326104164, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_content_type_classification", "lineno": 256, "outcome": "passed", "keywords": ["test_content_type_classification", "TestContentClassifier", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00012872321531176567, "outcome": "passed"}, "call": {"duration": 0.0044806827791035175, "outcome": "passed"}, "teardown": {"duration": 8.768215775489807e-05, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_academic_level_classification", "lineno": 289, "outcome": "passed", "keywords": ["test_academic_level_classification", "TestContentClassifier", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010637287050485611, "outcome": "passed"}, "call": {"duration": 0.003559331875294447, "outcome": "passed"}, "teardown": {"duration": 8.919183164834976e-05, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_topic_extraction", "lineno": 322, "outcome": "passed", "keywords": ["test_topic_extraction", "TestContentClassifier", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0001103132963180542, "outcome": "passed"}, "call": {"duration": 0.0019677849486470222, "outcome": "passed"}, "teardown": {"duration": 8.545210584998131e-05, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestContentClassifier::test_quality_indicators", "lineno": 341, "outcome": "passed", "keywords": ["test_quality_indicators", "TestContentClassifier", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.91220586001873e-05, "outcome": "passed"}, "call": {"duration": 0.0022395020350813866, "outcome": "passed"}, "teardown": {"duration": 9.067216888070107e-05, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor::test_full_extraction", "lineno": 371, "outcome": "passed", "keywords": ["test_full_extraction", "TestMetadataExtractor", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010387180373072624, "outcome": "passed"}, "call": {"duration": 0.3543850420974195, "outcome": "passed"}, "teardown": {"duration": 0.00011657318100333214, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestMetadataExtractor::test_batch_extraction", "lineno": 408, "outcome": "passed", "keywords": ["test_batch_extraction", "TestMetadataExtractor", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00012033293023705482, "outcome": "passed"}, "call": {"duration": 0.6374476361088455, "outcome": "passed"}, "teardown": {"duration": 0.00013127317652106285, "outcome": "passed"}}, {"nodeid": "tests/core/utils/test_scientific_extractors.py::TestIntegration::test_end_to_end_extraction", "lineno": 435, "outcome": "failed", "keywords": ["test_end_to_end_extraction", "TestIntegration", "test_scientific_extractors.py", "utils", "core", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00012240279465913773, "outcome": "passed"}, "call": {"duration": 0.3476126748137176, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/core/utils/test_scientific_extractors.py", "lineno": 484, "message": "AssertionError: assert 'research' in ['graduate', 'undergraduate']\n +  where 'research' = ContentClassification(content_type='lecture', academic_level='research', primary_topic='general', topics=[], quality_indicators={'technical_density': 1.0, 'citation_frequency': 1.0, 'structure_score': 0.4, 'academic_language': 0.06666666666666667, 'comprehensiveness': 0.0206}, confidence=0.7637021804407311).academic_level"}, "longrepr": "E   AssertionError: assert 'research' in ['graduate', 'undergraduate']\n     +  where 'research' = ContentClassification(content_type='lecture', academic_level='research', primary_topic='general', topics=[], quality_indicators={'technical_density': 1.0, 'citation_frequency': 1.0, 'structure_score': 0.4, 'academic_language': 0.06666666666666667, 'comprehensiveness': 0.0206}, confidence=0.7637021804407311).academic_level"}, "teardown": {"duration": 0.00012526288628578186, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_store_and_retrieve_with_embeddings", "lineno": 170, "outcome": "skipped", "keywords": ["test_store_and_retrieve_with_embeddings", "asyncio", "pytestmark", "TestArangoDBIntegration", "skipif", "test_arangodb_features.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010679196566343307, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py', 171, 'Skipped: ArangoDB utilities not available')"}, "teardown": {"duration": 8.694222196936607e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_hybrid_search", "lineno": 190, "outcome": "skipped", "keywords": ["test_hybrid_search", "asyncio", "pytestmark", "TestArangoDBIntegration", "skipif", "test_arangodb_features.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.25217755138874e-05, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py', 191, 'Skipped: ArangoDB utilities not available')"}, "teardown": {"duration": 9.810179471969604e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_citation_network", "lineno": 209, "outcome": "skipped", "keywords": ["test_citation_network", "asyncio", "pytestmark", "TestArangoDBIntegration", "skipif", "test_arangodb_features.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 8.984189480543137e-05, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py', 210, 'Skipped: ArangoDB utilities not available')"}, "teardown": {"duration": 8.715223520994186e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_speaker_relationships", "lineno": 229, "outcome": "skipped", "keywords": ["test_speaker_relationships", "asyncio", "pytestmark", "TestArangoDBIntegration", "skipif", "test_arangodb_features.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.135203436017036e-05, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py', 230, 'Skipped: ArangoDB utilities not available')"}, "teardown": {"duration": 8.84421169757843e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_entity_linking", "lineno": 264, "outcome": "skipped", "keywords": ["test_entity_linking", "asyncio", "pytestmark", "TestArangoDBIntegration", "skipif", "test_arangodb_features.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.023211896419525e-05, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py', 265, 'Skipped: ArangoDB utilities not available')"}, "teardown": {"duration": 8.439179509878159e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_find_related_videos", "lineno": 302, "outcome": "skipped", "keywords": ["test_find_related_videos", "asyncio", "pytestmark", "TestArangoDBIntegration", "skipif", "test_arangodb_features.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.077228605747223e-05, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py', 303, 'Skipped: ArangoDB utilities not available')"}, "teardown": {"duration": 8.925190195441246e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arangodb_features.py::TestArangoDBIntegration::test_research_analyzer_integration", "lineno": 320, "outcome": "skipped", "keywords": ["test_research_analyzer_integration", "asyncio", "pytestmark", "TestArangoDBIntegration", "skipif", "test_arangodb_features.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 8.865213021636009e-05, "outcome": "skipped", "longrepr": "('/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arangodb_features.py', 321, 'Skipped: ArangoDB utilities not available')"}, "teardown": {"duration": 8.232193067669868e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_citation_validation_pipeline", "lineno": 86, "outcome": "failed", "keywords": ["test_citation_validation_pipeline", "asyncio", "pytestmark", "TestArxivYouTubeIntegration", "test_arxiv_youtube_integration.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.3177856500260532, "outcome": "passed", "log": [{"name": "youtube_transcripts.deepretrieval_optimizer", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/deepretrieval_optimizer.py", "filename": "deepretrieval_optimizer.py", "module": "deepretrieval_optimizer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "_load_lora_adapter", "created": 1749156700.55019, "msecs": 550.0, "relativeCreated": 26051.664113998413, "thread": 128735910805824, "threadName": "MainThread", "processName": "MainProcess", "process": 326472, "taskName": null}]}, "call": {"duration": 6.99569287430495, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arxiv_youtube_integration.py", "lineno": 106, "message": "assert 0 > 0\n +  where 0 = len([])"}, "longrepr": "E   assert 0 > 0\n     +  where 0 = len([])"}, "teardown": {"duration": 0.0002707056701183319, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_research_enhancement_pipeline", "lineno": 114, "outcome": "failed", "keywords": ["test_research_enhancement_pipeline", "asyncio", "pytestmark", "TestArxivYouTubeIntegration", "test_arxiv_youtube_integration.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.3609676109626889, "outcome": "passed", "log": [{"name": "youtube_transcripts.deepretrieval_optimizer", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/deepretrieval_optimizer.py", "filename": "deepretrieval_optimizer.py", "module": "deepretrieval_optimizer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "_load_lora_adapter", "created": 1749156707.8733735, "msecs": 873.0, "relativeCreated": 33374.847650527954, "thread": 128735910805824, "threadName": "MainThread", "processName": "MainProcess", "process": 326472, "taskName": null}]}, "call": {"duration": 0.011642007157206535, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_arxiv_youtube_integration.py", "lineno": 149, "message": "assert 0 > 0\n +  where 0 = len([])"}, "longrepr": "E   assert 0 > 0\n     +  where 0 = len([])"}, "teardown": {"duration": 0.0002582860179245472, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_cross_reference_search", "lineno": 152, "outcome": "passed", "keywords": ["test_cross_reference_search", "TestArxivYouTubeIntegration", "test_arxiv_youtube_integration.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.02334561524912715, "outcome": "passed", "log": [{"name": "youtube_transcripts.deepretrieval_optimizer", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/deepretrieval_optimizer.py", "filename": "deepretrieval_optimizer.py", "module": "deepretrieval_optimizer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "_load_lora_adapter", "created": 1749156708.2393894, "msecs": 239.0, "relativeCreated": 33740.86356163025, "thread": 128735910805824, "threadName": "MainThread", "processName": "MainProcess", "process": 326472, "taskName": null}]}, "call": {"duration": 9.392678685020655, "outcome": "passed"}, "teardown": {"duration": 0.0001452830620110035, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_evidence_based_validation", "lineno": 172, "outcome": "passed", "keywords": ["test_evidence_based_validation", "asyncio", "pytestmark", "TestArxivYouTubeIntegration", "test_arxiv_youtube_integration.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.31134427059441805, "outcome": "passed"}, "call": {"duration": 0.0002351761795580387, "outcome": "passed"}, "teardown": {"duration": 0.00020018499344587326, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_unified_metadata_extraction", "lineno": 211, "outcome": "passed", "keywords": ["test_unified_metadata_extraction", "TestArxivYouTubeIntegration", "test_arxiv_youtube_integration.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.36136364517733455, "outcome": "passed"}, "call": {"duration": 0.02124406723305583, "outcome": "passed"}, "teardown": {"duration": 0.0001343442127108574, "outcome": "passed"}}, {"nodeid": "tests/integration/test_arxiv_youtube_integration.py::TestArxivYouTubeIntegration::test_research_discovery_workflow", "lineno": 241, "outcome": "passed", "keywords": ["test_research_discovery_workflow", "asyncio", "pytestmark", "TestArxivYouTubeIntegration", "test_arxiv_youtube_integration.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.02281198278069496, "outcome": "passed", "log": [{"name": "youtube_transcripts.deepretrieval_optimizer", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/deepretrieval_optimizer.py", "filename": "deepretrieval_optimizer.py", "module": "deepretrieval_optimizer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "_load_lora_adapter", "created": 1749156718.3534577, "msecs": 353.0, "relativeCreated": 43854.93183135986, "thread": 128735910805824, "threadName": "MainThread", "processName": "MainProcess", "process": 326472, "taskName": null}]}, "call": {"duration": 14.116357401944697, "outcome": "passed"}, "teardown": {"duration": 0.0002630562521517277, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_initialization", "lineno": 123, "outcome": "passed", "keywords": ["test_sqlite_initialization", "asyncio", "pytestmark", "TestSQLiteBackend", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00045069027692079544, "outcome": "passed"}, "call": {"duration": 0.015419831965118647, "outcome": "passed"}, "teardown": {"duration": 0.00040644966065883636, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_store_and_retrieve", "lineno": 161, "outcome": "passed", "keywords": ["test_sqlite_store_and_retrieve", "asyncio", "pytestmark", "TestSQLiteBackend", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0005407328717410564, "outcome": "passed"}, "call": {"duration": 0.01312453905120492, "outcome": "passed"}, "teardown": {"duration": 0.00040890928357839584, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_search", "lineno": 199, "outcome": "passed", "keywords": ["test_sqlite_search", "asyncio", "pytestmark", "TestSQLiteBackend", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0005156509578227997, "outcome": "passed"}, "call": {"duration": 0.013767934869974852, "outcome": "passed"}, "teardown": {"duration": 0.000393799040466547, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestSQLiteBackend::test_sqlite_evidence_finding", "lineno": 237, "outcome": "passed", "keywords": ["test_sqlite_evidence_finding", "asyncio", "pytestmark", "TestSQLiteBackend", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0005075312219560146, "outcome": "passed"}, "call": {"duration": 0.012333751656115055, "outcome": "passed"}, "teardown": {"duration": 0.00042820023372769356, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_auto_detection", "lineno": 271, "outcome": "passed", "keywords": ["test_auto_detection", "asyncio", "pytestmark", "TestDatabaseAdapter", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0004273289814591408, "outcome": "passed"}, "call": {"duration": 0.015282920096069574, "outcome": "passed"}, "teardown": {"duration": 0.00036815786734223366, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_forced_backends", "lineno": 296, "outcome": "passed", "keywords": ["test_forced_backends", "asyncio", "pytestmark", "TestDatabaseAdapter", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0004315902478992939, "outcome": "passed"}, "call": {"duration": 0.010654952842742205, "outcome": "passed"}, "teardown": {"duration": 0.0002737059257924557, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseAdapter::test_adapter_interface", "lineno": 329, "outcome": "passed", "keywords": ["test_adapter_interface", "asyncio", "pytestmark", "TestDatabaseAdapter", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0003743288107216358, "outcome": "passed"}, "call": {"duration": 0.01337655633687973, "outcome": "passed"}, "teardown": {"duration": 0.00026678573340177536, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_config_from_env", "lineno": 372, "outcome": "passed", "keywords": ["test_config_from_env", "TestDatabaseConfig", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0001417333260178566, "outcome": "passed"}, "call": {"duration": 0.00015752296894788742, "outcome": "passed"}, "teardown": {"duration": 9.503215551376343e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::TestDatabaseConfig::test_backend_config_generation", "lineno": 405, "outcome": "passed", "keywords": ["test_backend_config_generation", "TestDatabaseConfig", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00012934301048517227, "outcome": "passed"}, "call": {"duration": 0.00013086292892694473, "outcome": "passed"}, "teardown": {"duration": 9.46330837905407e-05, "outcome": "passed"}}, {"nodeid": "tests/integration/test_database_adapter.py::test_full_integration_flow", "lineno": 430, "outcome": "passed", "keywords": ["test_full_integration_flow", "asyncio", "pytestmark", "test_database_adapter.py", "integration", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0003388277254998684, "outcome": "passed"}, "call": {"duration": 0.016221719793975353, "outcome": "passed"}, "teardown": {"duration": 0.00032655801624059677, "outcome": "passed"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_module_attributes", "lineno": 30, "outcome": "passed", "keywords": ["test_module_attributes", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0008054678328335285, "outcome": "passed", "stderr": "2025-06-05 16:52:12.593 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.00015931297093629837, "outcome": "passed"}, "teardown": {"duration": 0.0002530161291360855, "outcome": "passed", "stderr": "2025-06-05 16:52:12.593 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_standardized_response_format", "lineno": 45, "outcome": "passed", "keywords": ["test_standardized_response_format", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00040439004078507423, "outcome": "passed", "stderr": "2025-06-05 16:52:12.594 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.0001519140787422657, "outcome": "passed"}, "teardown": {"duration": 0.00026321597397327423, "outcome": "passed", "stderr": "2025-06-05 16:52:12.594 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_error_response_format", "lineno": 71, "outcome": "passed", "keywords": ["test_error_response_format", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0004036887548863888, "outcome": "passed", "stderr": "2025-06-05 16:52:12.595 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.00014787400141358376, "outcome": "passed"}, "teardown": {"duration": 0.00024220626801252365, "outcome": "passed", "stderr": "2025-06-05 16:52:12.595 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_fetch_transcript_missing_params", "lineno": 91, "outcome": "passed", "keywords": ["test_fetch_transcript_missing_params", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0016423179768025875, "outcome": "passed", "stderr": "2025-06-05 16:52:12.597 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.0002214452251791954, "outcome": "passed", "stderr": "2025-06-05 16:52:12.597 | ERROR    | youtube_transcripts.integrations.youtube_transcripts_module:process:83 - Error in youtube_transcripts: video_id is required\n"}, "teardown": {"duration": 0.000229754950851202, "outcome": "passed", "stderr": "2025-06-05 16:52:12.598 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_search_transcripts", "lineno": 105, "outcome": "passed", "keywords": ["test_search_transcripts", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0004243399016559124, "outcome": "passed", "stderr": "2025-06-05 16:52:12.598 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.00014722300693392754, "outcome": "passed"}, "teardown": {"duration": 0.00022935494780540466, "outcome": "passed", "stderr": "2025-06-05 16:52:12.599 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_get_channel_videos", "lineno": 126, "outcome": "passed", "keywords": ["test_get_channel_videos", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00040349923074245453, "outcome": "passed", "stderr": "2025-06-05 16:52:12.599 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.0001463429071009159, "outcome": "passed"}, "teardown": {"duration": 0.00023820577189326286, "outcome": "passed", "stderr": "2025-06-05 16:52:12.600 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_transcript", "lineno": 145, "outcome": "passed", "keywords": ["test_extract_keywords_with_transcript", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0004125293344259262, "outcome": "passed", "stderr": "2025-06-05 16:52:12.600 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.00014932407066226006, "outcome": "passed"}, "teardown": {"duration": 0.00022734515368938446, "outcome": "passed", "stderr": "2025-06-05 16:52:12.601 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_extract_keywords_with_video_id", "lineno": 164, "outcome": "passed", "keywords": ["test_extract_keywords_with_video_id", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0004040389321744442, "outcome": "passed", "stderr": "2025-06-05 16:52:12.601 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.00014382414519786835, "outcome": "passed"}, "teardown": {"duration": 0.00022654514759778976, "outcome": "passed", "stderr": "2025-06-05 16:52:12.602 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_with_id", "lineno": 180, "outcome": "passed", "keywords": ["test_summarize_video_with_id", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0003966991789638996, "outcome": "passed", "stderr": "2025-06-05 16:52:12.603 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.00014871405437588692, "outcome": "passed"}, "teardown": {"duration": 0.0002554659731686115, "outcome": "passed", "stderr": "2025-06-05 16:52:12.603 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_summarize_video_missing_params", "lineno": 200, "outcome": "passed", "keywords": ["test_summarize_video_missing_params", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0003938591107726097, "outcome": "passed", "stderr": "2025-06-05 16:52:12.604 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.00020598480477929115, "outcome": "passed", "stderr": "2025-06-05 16:52:12.604 | ERROR    | youtube_transcripts.integrations.youtube_transcripts_module:process:83 - Error in youtube_transcripts: Either video_id or transcript is required\n"}, "teardown": {"duration": 0.0002410360611975193, "outcome": "passed", "stderr": "2025-06-05 16:52:12.604 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/level_0/test_youtube_transcripts_standardized.py::TestYoutubeTranscriptsStandardized::test_multiple_actions_sequence", "lineno": 215, "outcome": "passed", "keywords": ["test_multiple_actions_sequence", "asyncio", "pytestmark", "TestYoutubeTranscriptsStandardized", "test_youtube_transcripts_standardized.py", "level_0", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0004824809730052948, "outcome": "passed", "stderr": "2025-06-05 16:52:12.605 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:start:50 - youtube_transcripts module started successfully\n"}, "call": {"duration": 0.0002250848338007927, "outcome": "passed"}, "teardown": {"duration": 0.00023207487538456917, "outcome": "passed", "stderr": "2025-06-05 16:52:12.605 | INFO     | youtube_transcripts.integrations.youtube_transcripts_module:stop:58 - youtube_transcripts module stopped\n"}}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_registry_creation", "lineno": 22, "outcome": "passed", "keywords": ["test_registry_creation", "TestPromptRegistry", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00029031699523329735, "outcome": "passed"}, "call": {"duration": 0.00013456307351589203, "outcome": "passed"}, "teardown": {"duration": 8.419202640652657e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_register_prompt", "lineno": 29, "outcome": "passed", "keywords": ["test_register_prompt", "TestPromptRegistry", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.834207594394684e-05, "outcome": "passed"}, "call": {"duration": 0.00014180410653352737, "outcome": "passed"}, "teardown": {"duration": 8.515175431966782e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_get_prompt", "lineno": 51, "outcome": "passed", "keywords": ["test_get_prompt", "TestPromptRegistry", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010991282761096954, "outcome": "passed"}, "call": {"duration": 0.0001210230402648449, "outcome": "passed"}, "teardown": {"duration": 8.121179416775703e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_prompt", "lineno": 66, "outcome": "passed", "keywords": ["test_execute_prompt", "asyncio", "pytestmark", "TestPromptRegistry", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00020316476002335548, "outcome": "passed"}, "call": {"duration": 0.00019619427621364594, "outcome": "passed"}, "teardown": {"duration": 0.00014890264719724655, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_execute_with_registry_injection", "lineno": 78, "outcome": "passed", "keywords": ["test_execute_with_registry_injection", "asyncio", "pytestmark", "TestPromptRegistry", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0001977137289941311, "outcome": "passed"}, "call": {"duration": 0.00017286324873566628, "outcome": "passed"}, "teardown": {"duration": 0.00021092407405376434, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestPromptRegistry::test_prompt_parameters_extraction", "lineno": 91, "outcome": "passed", "keywords": ["test_prompt_parameters_extraction", "TestPromptRegistry", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010185316205024719, "outcome": "passed"}, "call": {"duration": 0.0001363730989396572, "outcome": "passed"}, "teardown": {"duration": 8.384184911847115e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_registration", "lineno": 124, "outcome": "passed", "keywords": ["test_decorator_registration", "TestMCPPromptDecorator", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.758211672306061e-05, "outcome": "passed"}, "call": {"duration": 0.00012500304728746414, "outcome": "passed"}, "teardown": {"duration": 8.240202441811562e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptDecorator::test_decorator_with_examples", "lineno": 146, "outcome": "passed", "keywords": ["test_decorator_with_examples", "TestMCPPromptDecorator", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.607197716832161e-05, "outcome": "passed"}, "call": {"duration": 0.000119723379611969, "outcome": "passed"}, "teardown": {"duration": 8.9272391051054e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_basic_formatting", "lineno": 169, "outcome": "passed", "keywords": ["test_basic_formatting", "TestFormatPromptResponse", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010023219510912895, "outcome": "passed"}, "call": {"duration": 0.0001011919230222702, "outcome": "passed"}, "teardown": {"duration": 8.188188076019287e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_next_steps", "lineno": 176, "outcome": "passed", "keywords": ["test_formatting_with_next_steps", "TestFormatPromptResponse", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.913323447108269e-05, "outcome": "passed"}, "call": {"duration": 0.00011136289685964584, "outcome": "passed"}, "teardown": {"duration": 9.773159399628639e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_suggestions", "lineno": 188, "outcome": "passed", "keywords": ["test_formatting_with_suggestions", "TestFormatPromptResponse", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00010253209620714188, "outcome": "passed"}, "call": {"duration": 0.00010721199214458466, "outcome": "passed"}, "teardown": {"duration": 8.582230657339096e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestFormatPromptResponse::test_formatting_with_data", "lineno": 203, "outcome": "passed", "keywords": ["test_formatting_with_data", "TestFormatPromptResponse", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 9.998166933655739e-05, "outcome": "passed"}, "call": {"duration": 0.00022129574790596962, "outcome": "passed"}, "teardown": {"duration": 8.754199370741844e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_prompt_to_schema", "lineno": 222, "outcome": "passed", "keywords": ["test_prompt_to_schema", "TestMCPPromptSchema", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.0001003616489470005, "outcome": "passed"}, "call": {"duration": 0.0001100730150938034, "outcome": "passed"}, "teardown": {"duration": 8.795224130153656e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::TestMCPPromptSchema::test_registry_to_schema", "lineno": 243, "outcome": "passed", "keywords": ["test_registry_to_schema", "TestMCPPromptSchema", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00011369306594133377, "outcome": "passed"}, "call": {"duration": 0.00013630278408527374, "outcome": "passed"}, "teardown": {"duration": 8.690217509865761e-05, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::test_full_prompt_workflow", "lineno": 265, "outcome": "passed", "keywords": ["test_full_prompt_workflow", "asyncio", "pytestmark", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00020066369324922562, "outcome": "passed"}, "call": {"duration": 0.00022041518241167068, "outcome": "passed"}, "teardown": {"duration": 0.00014983396977186203, "outcome": "passed"}}, {"nodeid": "tests/mcp/test_prompts.py::test_error_handling", "lineno": 304, "outcome": "passed", "keywords": ["test_error_handling", "asyncio", "pytestmark", "test_prompts.py", "mcp", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00019707391038537025, "outcome": "passed"}, "call": {"duration": 0.00026110606268048286, "outcome": "passed"}, "teardown": {"duration": 0.00015606312081217766, "outcome": "passed"}}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_1_basic_search", "lineno": 47, "outcome": "failed", "keywords": ["test_scenario_1_basic_search", "TestLevel0Scenarios", "test_level0_scenarios.py", "scenarios", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.025985533837229013, "outcome": "passed", "log": [{"name": "youtube_transcripts.deepretrieval_optimizer", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/deepretrieval_optimizer.py", "filename": "deepretrieval_optimizer.py", "module": "deepretrieval_optimizer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "_load_lora_adapter", "created": 1749156732.6407137, "msecs": 640.0, "relativeCreated": 58142.18783378601, "thread": 128735910805824, "threadName": "MainThread", "processName": "MainProcess", "process": 326472, "taskName": null}]}, "call": {"duration": 5.271132525056601, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/scenarios/test_level0_scenarios.py", "lineno": 90, "message": "assert False\n +  where False = any(<generator object TestLevel0Scenarios.test_scenario_1_basic_search.<locals>.<genexpr> at 0x7513cc102040>)"}, "longrepr": "E   assert False\n     +  where False = any(<generator object TestLevel0Scenarios.test_scenario_1_basic_search.<locals>.<genexpr> at 0x7513cc102040>)"}, "teardown": {"duration": 0.00023660482838749886, "outcome": "passed"}}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_2_search_with_no_results", "lineno": 97, "outcome": "failed", "keywords": ["test_scenario_2_search_with_no_results", "TestLevel0Scenarios", "test_level0_scenarios.py", "scenarios", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.03247037110850215, "outcome": "passed", "log": [{"name": "youtube_transcripts.deepretrieval_optimizer", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/deepretrieval_optimizer.py", "filename": "deepretrieval_optimizer.py", "module": "deepretrieval_optimizer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "_load_lora_adapter", "created": 1749156737.9479935, "msecs": 947.0, "relativeCreated": 63449.46765899658, "thread": 128735910805824, "threadName": "MainThread", "processName": "MainProcess", "process": 326472, "taskName": null}]}, "call": {"duration": 7.9434584099799395, "outcome": "failed", "crash": {"path": "/home/graham/workspace/experiments/youtube_transcripts/tests/scenarios/test_level0_scenarios.py", "lineno": 111, "message": "AssertionError: assert 3 == 0\n +  where 3 = len([{'source': 'widened_search', 'video_id': '7IPPHuLI1tk', 'title': 'Open Source Gems: AI Agents, Diffusion Models &amp; More! #136', 'channel_name': 'ManuAGI - AutoGPT Tutorials', 'content': '', 'url': '', 'published_at': '', 'score': 0.0}, {'source': 'widened_search', 'video_id': 'SKAGSVyMr-w', 'title': 'Top Open Source GitHub Projects: AI, Code Security &amp; More! #127', 'channel_name': 'ManuAGI - AutoGPT Tutorials', 'content': '', 'url': '', 'published_at': '', 'score': 0.0}, {'source': 'widened_search', 'video_id': 'verl_002', 'title': 'Building with VERL: A Tutorial', 'channel_name': 'DiscoverAI', 'content': '', 'url': '', 'published_at': '', 'score': 0.0}])"}, "longrepr": "E   AssertionError: assert 3 == 0\n     +  where 3 = len([{'source': 'widened_search', 'video_id': '7IPPHuLI1tk', 'title': 'Open Source Gems: AI Agents, Diffusion Models &amp; More! #136', 'channel_name': 'ManuAGI - AutoGPT Tutorials', 'content': '', 'url': '', 'published_at': '', 'score': 0.0}, {'source': 'widened_search', 'video_id': 'SKAGSVyMr-w', 'title': 'Top Open Source GitHub Projects: AI, Code Security &amp; More! #127', 'channel_name': 'ManuAGI - AutoGPT Tutorials', 'content': '', 'url': '', 'published_at': '', 'score': 0.0}, {'source': 'widened_search', 'video_id': 'verl_002', 'title': 'Building with VERL: A Tutorial', 'channel_name': 'DiscoverAI', 'content': '', 'url': '', 'published_at': '', 'score': 0.0}])"}, "teardown": {"duration": 0.00018838420510292053, "outcome": "passed"}}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_3_search_widening", "lineno": 113, "outcome": "passed", "keywords": ["test_scenario_3_search_widening", "TestLevel0Scenarios", "test_level0_scenarios.py", "scenarios", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.02581739891320467, "outcome": "passed", "log": [{"name": "youtube_transcripts.deepretrieval_optimizer", "msg": "Could not load LoRA adapter: No module named 'unsloth'", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/home/graham/workspace/experiments/youtube_transcripts/src/youtube_transcripts/deepretrieval_optimizer.py", "filename": "deepretrieval_optimizer.py", "module": "deepretrieval_optimizer", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 67, "funcName": "_load_lora_adapter", "created": 1749156745.9162245, "msecs": 916.0, "relativeCreated": 71417.69862174988, "thread": 128735910805824, "threadName": "MainThread", "processName": "MainProcess", "process": 326472, "taskName": null}]}, "call": {"duration": 6.054233543109149, "outcome": "passed"}, "teardown": {"duration": 0.00018336530774831772, "outcome": "passed"}}, {"nodeid": "tests/scenarios/test_level0_scenarios.py::TestLevel0Scenarios::test_scenario_4_citation_extraction", "lineno": 139, "outcome": "passed", "keywords": ["test_scenario_4_citation_extraction", "TestLevel0Scenarios", "test_level0_scenarios.py", "scenarios", "tests", "youtube_transcripts", ""], "setup": {"duration": 0.00012653321027755737, "outcome": "passed"}, "call": {"duration": 11.20400933502242, "outcome": "passed"}, "teardown": {"duration": 0.00011955294758081436, "outcome": "passed"}}], "warnings": [{"message": "cannot collect test class 'TestReportGenerator' because it has a __init__ constructor (from: tests/integration/test_database_adapter.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "/home/graham/workspace/experiments/youtube_transcripts/tests/integration/test_database_adapter.py", "lineno": 35}]}